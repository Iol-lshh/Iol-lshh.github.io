{"version":3,"file":"app-57ecc04603fb1af28833.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./.cache/_this_is_virtual_fs_path_/$virtual/async-requires.js","webpack://gatsby-starter-blog/./.cache/api-runner-browser-plugins.js","webpack://gatsby-starter-blog/./.cache/api-runner-browser.js","webpack://gatsby-starter-blog/./.cache/create-content-digest-browser-shim.js","webpack://gatsby-starter-blog/./.cache/emitter.js","webpack://gatsby-starter-blog/./.cache/normalize-page-path.js","webpack://gatsby-starter-blog/./.cache/find-path.js","webpack://gatsby-starter-blog/./.cache/slice/server-slice-renderer.js","webpack://gatsby-starter-blog/./.cache/slice/server-slice.js","webpack://gatsby-starter-blog/./.cache/slice/inline-slice.js","webpack://gatsby-starter-blog/./.cache/slice.js","webpack://gatsby-starter-blog/./.cache/gatsby-browser-entry.js","webpack://gatsby-starter-blog/./.cache/prefetch.js","webpack://gatsby-starter-blog/./.cache/loader.js","webpack://gatsby-starter-blog/./.cache/head/components/fire-callback-in-effect.js","webpack://gatsby-starter-blog/./.cache/head/constants.js","webpack://gatsby-starter-blog/./.cache/head/utils.js","webpack://gatsby-starter-blog/./.cache/head/head-export-handler-for-browser.js","webpack://gatsby-starter-blog/./.cache/page-renderer.js","webpack://gatsby-starter-blog/./.cache/route-announcer-props.js","webpack://gatsby-starter-blog/./.cache/navigation.js","webpack://gatsby-starter-blog/./.cache/ensure-resources.js","webpack://gatsby-starter-blog/./.cache/production-app.js","webpack://gatsby-starter-blog/./.cache/public-page-renderer-prod.js","webpack://gatsby-starter-blog/./.cache/public-page-renderer.js","webpack://gatsby-starter-blog/./.cache/react-dom-utils.js","webpack://gatsby-starter-blog/./.cache/redirect-utils.js","webpack://gatsby-starter-blog/./.cache/register-service-worker.js","webpack://gatsby-starter-blog/./.cache/slice/context.js","webpack://gatsby-starter-blog/./.cache/static-query.js","webpack://gatsby-starter-blog/./.cache/context-utils.js","webpack://gatsby-starter-blog/./.cache/strip-prefix.js"],"sourcesContent":["exports.components = {\n  \"component---src-pages-404-js\": () => import(\"./../../../src/pages/404.js\" /* webpackChunkName: \"component---src-pages-404-js\" */),\n  \"component---src-pages-index-js\": () => import(\"./../../../src/pages/index.js\" /* webpackChunkName: \"component---src-pages-index-js\" */),\n  \"component---src-templates-blog-post-js\": () => import(\"./../../../src/templates/blog-post.js\" /* webpackChunkName: \"component---src-templates-blog-post-js\" */),\n  \"component---src-templates-category-js\": () => import(\"./../../../src/templates/category.js\" /* webpackChunkName: \"component---src-templates-category-js\" */)\n}\n\n","module.exports = [{\n      plugin: require('../node_modules/gatsby-remark-images/gatsby-browser.js'),\n      options: {\"plugins\":[],\"maxWidth\":630,\"linkImagesToOriginal\":false,\"showCaptions\":false,\"markdownCaptions\":true,\"withWebp\":true,\"withAvif\":false,\"quality\":90,\"backgroundColor\":\"white\",\"disableBgImageOnAlpha\":true,\"loading\":\"lazy\",\"decoding\":\"async\",\"disableBgImage\":false},\n    },{\n      plugin: require('../node_modules/gatsby-plugin-manifest/gatsby-browser.js'),\n      options: {\"plugins\":[],\"name\":\"Iol-lshh's Blog\",\"short_name\":\"Iol-lshh's\",\"start_url\":\"/\",\"background_color\":\"#ffffff\",\"display\":\"minimal-ui\",\"icon\":\"src/images/icon.png\",\"legacy\":true,\"theme_color_in_head\":true,\"cache_busting_mode\":\"query\",\"crossOrigin\":\"anonymous\",\"include_favicon\":true,\"cacheDigest\":\"56d4e123578ce35002a42d9173e57b17\"},\n    },{\n      plugin: require('../node_modules/gatsby-plugin-google-gtag/gatsby-browser.js'),\n      options: {\"plugins\":[],\"trackingIds\":[\"G-DM0ZW7QKL9\"],\"gtagConfig\":{\"anonymize_ip\":true},\"pluginConfig\":{\"head\":true,\"respectDNT\":false,\"exclude\":[],\"origin\":\"https://www.googletagmanager.com\",\"delayOnRouteUpdate\":0}},\n    },{\n      plugin: require('../gatsby-browser.js'),\n      options: {\"plugins\":[]},\n    },{\n      plugin: require('../node_modules/gatsby/dist/internal-plugins/partytown/gatsby-browser.js'),\n      options: {\"plugins\":[]},\n    }]\n","const plugins = require(`./api-runner-browser-plugins`)\nconst { getResourceURLsForPathname, loadPage, loadPageSync } =\n  require(`./loader`).publicLoader\n\nexports.apiRunner = (api, args = {}, defaultReturn, argTransform) => {\n  // Hooks for gatsby-cypress's API handler\n  if (process.env.CYPRESS_SUPPORT) {\n    if (window.___apiHandler) {\n      window.___apiHandler(api)\n    } else if (window.___resolvedAPIs) {\n      window.___resolvedAPIs.push(api)\n    } else {\n      window.___resolvedAPIs = [api]\n    }\n  }\n\n  let results = plugins.map(plugin => {\n    if (!plugin.plugin[api]) {\n      return undefined\n    }\n\n    args.getResourceURLsForPathname = getResourceURLsForPathname\n    args.loadPage = loadPage\n    args.loadPageSync = loadPageSync\n\n    const result = plugin.plugin[api](args, plugin.options)\n    if (result && argTransform) {\n      args = argTransform({ args, result, plugin })\n    }\n    return result\n  })\n\n  // Filter out undefined results.\n  results = results.filter(result => typeof result !== `undefined`)\n\n  if (results.length > 0) {\n    return results\n  } else if (defaultReturn) {\n    return [defaultReturn]\n  } else {\n    return []\n  }\n}\n\nexports.apiRunnerAsync = (api, args, defaultReturn) =>\n  plugins.reduce(\n    (previous, next) =>\n      next.plugin[api]\n        ? previous.then(() => next.plugin[api](args, next.options))\n        : previous,\n    Promise.resolve()\n  )\n","exports.createContentDigest = () => ``\n","import mitt from \"mitt\"\n\nconst emitter = mitt()\nexport default emitter\n","export default pathAndSearch => {\n  if (pathAndSearch === undefined) {\n    return pathAndSearch\n  }\n  let [path, search = ``] = pathAndSearch.split(`?`)\n  if (search) {\n    search = `?` + search\n  }\n\n  if (path === `/`) {\n    return `/` + search\n  }\n  if (path.charAt(path.length - 1) === `/`) {\n    return path.slice(0, -1) + search\n  }\n  return path + search\n}\n","import { pick } from \"@gatsbyjs/reach-router\"\nimport stripPrefix from \"./strip-prefix\"\nimport normalizePagePath from \"./normalize-page-path\"\nimport { maybeGetBrowserRedirect } from \"./redirect-utils.js\"\n\nconst pathCache = new Map()\nlet matchPaths = []\n\nconst trimPathname = rawPathname => {\n  let newRawPathname = rawPathname\n  const queryIndex = rawPathname.indexOf(`?`)\n\n  if (queryIndex !== -1) {\n    const [path, qs] = rawPathname.split(`?`)\n    newRawPathname = `${path}?${encodeURIComponent(qs)}`\n  }\n\n  const pathname = decodeURIComponent(newRawPathname)\n\n  // Remove the pathPrefix from the pathname.\n  const trimmedPathname = stripPrefix(\n    pathname,\n    decodeURIComponent(__BASE_PATH__)\n  )\n    // Remove any hashfragment\n    .split(`#`)[0]\n\n  return trimmedPathname\n}\n\nfunction absolutify(path) {\n  // If it's already absolute, return as-is\n  if (\n    path.startsWith(`/`) ||\n    path.startsWith(`https://`) ||\n    path.startsWith(`http://`)\n  ) {\n    return path\n  }\n  // Calculate path relative to current location, adding a trailing slash to\n  // match behavior of @reach/router\n  return new URL(\n    path,\n    window.location.href + (window.location.href.endsWith(`/`) ? `` : `/`)\n  ).pathname\n}\n\n/**\n * Set list of matchPaths\n *\n * @param {Array<{path: string, matchPath: string}>} value collection of matchPaths\n */\nexport const setMatchPaths = value => {\n  matchPaths = value\n}\n\n/**\n * Return a matchpath url\n * if `match-paths.json` contains `{ \"/foo*\": \"/page1\", ...}`, then\n * `/foo?bar=far` => `/page1`\n *\n * @param {string} rawPathname A raw pathname\n * @return {string|null}\n */\nexport const findMatchPath = rawPathname => {\n  const trimmedPathname = cleanPath(rawPathname)\n\n  const pickPaths = matchPaths.map(({ path, matchPath }) => {\n    return {\n      path: matchPath,\n      originalPath: path,\n    }\n  })\n\n  const path = pick(pickPaths, trimmedPathname)\n\n  if (path) {\n    return normalizePagePath(path.route.originalPath)\n  }\n\n  return null\n}\n\n/**\n * Return a matchpath params from reach/router rules\n * if `match-paths.json` contains `{ \":bar/*foo\" }`, and the path is /baz/zaz/zoo\n * then it returns\n *  { bar: baz, foo: zaz/zoo }\n *\n * @param {string} rawPathname A raw pathname\n * @return {object}\n */\nexport const grabMatchParams = rawPathname => {\n  const trimmedPathname = cleanPath(rawPathname)\n\n  const pickPaths = matchPaths.map(({ path, matchPath }) => {\n    return {\n      path: matchPath,\n      originalPath: path,\n    }\n  })\n\n  const path = pick(pickPaths, trimmedPathname)\n\n  if (path) {\n    return path.params\n  }\n\n  return {}\n}\n\n// Given a raw URL path, returns the cleaned version of it (trim off\n// `#` and query params), or if it matches an entry in\n// `match-paths.json`, its matched path is returned\n//\n// E.g. `/foo?bar=far` => `/foo`\n//\n// Or if `match-paths.json` contains `{ \"/foo*\": \"/page1\", ...}`, then\n// `/foo?bar=far` => `/page1`\nexport const findPath = rawPathname => {\n  const trimmedPathname = trimPathname(absolutify(rawPathname))\n  if (pathCache.has(trimmedPathname)) {\n    return pathCache.get(trimmedPathname)\n  }\n\n  const redirect = maybeGetBrowserRedirect(rawPathname)\n  if (redirect) {\n    return findPath(redirect.toPath)\n  }\n\n  let foundPath = findMatchPath(trimmedPathname)\n\n  if (!foundPath) {\n    foundPath = cleanPath(rawPathname)\n  }\n\n  pathCache.set(trimmedPathname, foundPath)\n\n  return foundPath\n}\n\n/**\n * Clean a url and converts /index.html => /\n * E.g. `/foo?bar=far` => `/foo`\n *\n * @param {string} rawPathname A raw pathname\n * @return {string}\n */\nexport const cleanPath = rawPathname => {\n  const trimmedPathname = trimPathname(absolutify(rawPathname))\n\n  let foundPath = trimmedPathname\n  if (foundPath === `/index.html`) {\n    foundPath = `/`\n  }\n\n  foundPath = normalizePagePath(foundPath)\n\n  return foundPath\n}\n","import React from \"react\"\n\nexport const ServerSliceRenderer = ({ sliceId, children }) => {\n  const contents = [\n    React.createElement(`slice-start`, {\n      id: `${sliceId}-1`,\n    }),\n    React.createElement(`slice-end`, {\n      id: `${sliceId}-1`,\n    }),\n  ]\n\n  if (children) {\n    // if children exist, we split the slice into a before and after piece\n    // see renderSlices in render-html\n    contents.push(children)\n    contents.push(\n      React.createElement(`slice-start`, {\n        id: `${sliceId}-2`,\n      }),\n      React.createElement(`slice-end`, {\n        id: `${sliceId}-2`,\n      })\n    )\n  }\n\n  return contents\n}\n","import React, { useContext } from \"react\"\nimport { createContentDigest } from \"gatsby-core-utils/create-content-digest\"\nimport { SlicesMapContext, SlicesPropsContext } from \"./context\"\nimport { ServerSliceRenderer } from \"./server-slice-renderer\"\n\nconst getSliceId = (sliceName, sliceProps) => {\n  if (!Object.keys(sliceProps).length) {\n    return sliceName\n  }\n\n  const propsString = createContentDigest(sliceProps)\n  return `${sliceName}-${propsString}`\n}\n\nexport const ServerSlice = ({\n  sliceName,\n  allowEmpty,\n  children,\n  ...sliceProps\n}) => {\n  const slicesMap = useContext(SlicesMapContext)\n  const slicesProps = useContext(SlicesPropsContext)\n  const concreteSliceName = slicesMap[sliceName]\n\n  if (!concreteSliceName) {\n    if (allowEmpty) {\n      return null\n    } else {\n      throw new Error(\n        `Slice \"${concreteSliceName}\" for \"${sliceName}\" slot not found`\n      )\n    }\n  }\n\n  const sliceId = getSliceId(concreteSliceName, sliceProps)\n\n  // set props on context object for static-entry to return\n  let sliceUsage = slicesProps[sliceId]\n  if (!sliceUsage) {\n    slicesProps[sliceId] = sliceUsage = {\n      props: sliceProps,\n      sliceName: concreteSliceName,\n      hasChildren: !!children,\n    }\n  } else {\n    if (children) {\n      sliceUsage.hasChildren = true\n    }\n  }\n\n  return <ServerSliceRenderer sliceId={sliceId}>{children}</ServerSliceRenderer>\n}\n","import React, { useContext } from \"react\"\nimport { SlicesMapContext, SlicesResultsContext } from \"./context\"\n\nexport const InlineSlice = ({\n  sliceName,\n  allowEmpty,\n  children,\n  ...sliceProps\n}) => {\n  const slicesMap = useContext(SlicesMapContext)\n  const slicesResultsMap = useContext(SlicesResultsContext)\n  const concreteSliceName = slicesMap[sliceName]\n  const slice = slicesResultsMap.get(concreteSliceName)\n\n  if (!slice) {\n    if (allowEmpty) {\n      return null\n    } else {\n      throw new Error(\n        `Slice \"${concreteSliceName}\" for \"${sliceName}\" slot not found`\n      )\n    }\n  }\n\n  return (\n    <slice.component\n      sliceContext={slice.sliceContext}\n      data={slice.data}\n      {...sliceProps}\n    >\n      {children}\n    </slice.component>\n  )\n}\n","\"use client\"\n\nimport React, { useContext } from \"react\"\nimport { ServerSlice } from \"./slice/server-slice\"\nimport { InlineSlice } from \"./slice/inline-slice\"\nimport { SlicesContext } from \"./slice/context\"\n\nexport function Slice(props) {\n  if (process.env.GATSBY_SLICES) {\n    // we use sliceName internally, so remap alias to sliceName\n    const internalProps = {\n      ...props,\n      sliceName: props.alias,\n    }\n    delete internalProps.alias\n    delete internalProps.__renderedByLocation\n\n    const slicesContext = useContext(SlicesContext)\n\n    // validate props\n    const propErrors = validateSliceProps(props)\n    if (Object.keys(propErrors).length) {\n      throw new SlicePropsError(\n        slicesContext.renderEnvironment === `browser`,\n        internalProps.sliceName,\n        propErrors,\n        props.__renderedByLocation\n      )\n    }\n\n    if (slicesContext.renderEnvironment === `server`) {\n      return <ServerSlice {...internalProps} />\n    } else if (slicesContext.renderEnvironment === `browser`) {\n      // in the browser, we'll just render the component as is\n      return <InlineSlice {...internalProps} />\n    } else if (\n      slicesContext.renderEnvironment === `engines` ||\n      slicesContext.renderEnvironment === `dev-ssr`\n    ) {\n      // if we're in SSR, we'll just render the component as is\n      return <InlineSlice {...internalProps} />\n    } else if (slicesContext.renderEnvironment === `slices`) {\n      // we are not yet supporting nested slices\n\n      let additionalContextMessage = ``\n\n      // just in case generating additional contextual information fails, we still want the base message to show\n      // and not show another cryptic error message\n      try {\n        additionalContextMessage = `\\n\\nSlice component \"${slicesContext.sliceRoot.name}\" (${slicesContext.sliceRoot.componentPath}) tried to render <Slice alias=\"${props.alias}\"/>`\n      } catch {\n        // don't need to handle it, we will just skip the additional context message if we fail to generate it\n      }\n\n      throw new Error(\n        `Nested slices are not supported.${additionalContextMessage}\\n\\nSee https://gatsbyjs.com/docs/reference/built-in-components/gatsby-slice#nested-slices`\n      )\n    } else {\n      throw new Error(\n        `Slice context \"${slicesContext.renderEnvironment}\" is not supported.`\n      )\n    }\n  } else {\n    throw new Error(`Slices are disabled.`)\n  }\n}\n\nclass SlicePropsError extends Error {\n  constructor(inBrowser, sliceName, propErrors, renderedByLocation) {\n    const errors = Object.entries(propErrors)\n      .map(\n        ([key, value]) =>\n          `not serializable \"${value}\" type passed to \"${key}\" prop`\n      )\n      .join(`, `)\n\n    const name = `SlicePropsError`\n    let stack = ``\n    let message = ``\n\n    if (inBrowser) {\n      // They're just (kinda) kidding, I promise... You can still work here <3\n      //   https://www.gatsbyjs.com/careers/\n      const fullStack =\n        React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactDebugCurrentFrame.getCurrentStack()\n\n      // remove the first line of the stack trace\n      const stackLines = fullStack.trim().split(`\\n`).slice(1)\n      stackLines[0] = stackLines[0].trim()\n      stack = `\\n` + stackLines.join(`\\n`)\n\n      message = `Slice \"${sliceName}\" was passed props that are not serializable (${errors}).`\n    } else {\n      // we can't really grab any extra info outside of the browser, so just print what we can\n      message = `${name}: Slice \"${sliceName}\" was passed props that are not serializable (${errors}).`\n      const stackLines = new Error().stack.trim().split(`\\n`).slice(2)\n      stack = `${message}\\n${stackLines.join(`\\n`)}`\n    }\n\n    super(message)\n    this.name = name\n    if (stack) {\n      this.stack = stack\n    } else {\n      Error.captureStackTrace(this, SlicePropsError)\n    }\n\n    if (renderedByLocation) {\n      this.forcedLocation = { ...renderedByLocation, functionName: `Slice` }\n    }\n  }\n}\n\nconst validateSliceProps = (\n  props,\n  errors = {},\n  seenObjects = [],\n  path = null\n) => {\n  // recursively validate all props\n  for (const [name, value] of Object.entries(props)) {\n    if (\n      value === undefined ||\n      value === null ||\n      (!path && name === `children`)\n    ) {\n      continue\n    }\n\n    const propPath = path ? `${path}.${name}` : name\n\n    if (typeof value === `function`) {\n      errors[propPath] = typeof value\n    } else if (typeof value === `object` && seenObjects.indexOf(value) <= 0) {\n      seenObjects.push(value)\n      validateSliceProps(value, errors, seenObjects, propPath)\n    }\n  }\n\n  return errors\n}\n","import loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport { default as PageRenderer } from \"./public-page-renderer\"\nexport { useScrollRestoration } from \"gatsby-react-router-scroll\"\nexport {\n  Link,\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  parsePath,\n} from \"gatsby-link\"\n\nexport { graphql, prefetchPathname }\nexport { StaticQuery, StaticQueryContext, useStaticQuery } from \"./static-query\"\nexport { Slice } from \"./slice\"\nexport * from \"gatsby-script\"\n","const support = function (feature) {\n  if (typeof document === `undefined`) {\n    return false\n  }\n  const fakeLink = document.createElement(`link`)\n  try {\n    if (fakeLink.relList && typeof fakeLink.relList.supports === `function`) {\n      return fakeLink.relList.supports(feature)\n    }\n  } catch (err) {\n    return false\n  }\n  return false\n}\n\nconst linkPrefetchStrategy = function (url, options) {\n  return new Promise((resolve, reject) => {\n    if (typeof document === `undefined`) {\n      reject()\n      return\n    }\n\n    const link = document.createElement(`link`)\n    link.setAttribute(`rel`, `prefetch`)\n    link.setAttribute(`href`, url)\n\n    Object.keys(options).forEach(key => {\n      link.setAttribute(key, options[key])\n    })\n\n    link.onload = resolve\n    link.onerror = reject\n\n    const parentElement =\n      document.getElementsByTagName(`head`)[0] ||\n      document.getElementsByName(`script`)[0].parentNode\n    parentElement.appendChild(link)\n  })\n}\n\nconst xhrPrefetchStrategy = function (url) {\n  return new Promise((resolve, reject) => {\n    const req = new XMLHttpRequest()\n    req.open(`GET`, url, true)\n\n    req.onload = () => {\n      if (req.status === 200) {\n        resolve()\n      } else {\n        reject()\n      }\n    }\n\n    req.send(null)\n  })\n}\n\nconst supportedPrefetchStrategy = support(`prefetch`)\n  ? linkPrefetchStrategy\n  : xhrPrefetchStrategy\n\nconst preFetched = {}\n\nconst prefetch = function (url, options) {\n  return new Promise(resolve => {\n    if (preFetched[url]) {\n      resolve()\n      return\n    }\n\n    supportedPrefetchStrategy(url, options)\n      .then(() => {\n        resolve()\n        preFetched[url] = true\n      })\n      .catch(() => {}) // 404s are logged to the console anyway\n  })\n}\n\nexport default prefetch\n","import { createFromReadableStream } from \"react-server-dom-webpack\"\nimport prefetchHelper from \"./prefetch\"\nimport emitter from \"./emitter\"\nimport { setMatchPaths, findPath, findMatchPath } from \"./find-path\"\n\n/**\n * Available resource loading statuses\n */\nexport const PageResourceStatus = {\n  /**\n   * At least one of critical resources failed to load\n   */\n  Error: `error`,\n  /**\n   * Resources loaded successfully\n   */\n  Success: `success`,\n}\n\nconst preferDefault = m => (m && m.default) || m\n\nconst stripSurroundingSlashes = s => {\n  s = s[0] === `/` ? s.slice(1) : s\n  s = s.endsWith(`/`) ? s.slice(0, -1) : s\n  return s\n}\n\nconst createPageDataUrl = rawPath => {\n  const [path, maybeSearch] = rawPath.split(`?`)\n  const fixedPath = path === `/` ? `index` : stripSurroundingSlashes(path)\n  return `${__PATH_PREFIX__}/page-data/${fixedPath}/page-data.json${\n    maybeSearch ? `?${maybeSearch}` : ``\n  }`\n}\n\n/**\n * Utility to check the path that goes into doFetch for e.g. potential malicious intentions.\n * It checks for \"//\" because with this you could do a fetch request to a different domain.\n */\nconst shouldAbortFetch = rawPath => rawPath.startsWith(`//`)\n\nfunction doFetch(url, method = `GET`) {\n  return new Promise(resolve => {\n    const req = new XMLHttpRequest()\n    req.open(method, url, true)\n    req.onreadystatechange = () => {\n      if (req.readyState == 4) {\n        resolve(req)\n      }\n    }\n    req.send(null)\n  })\n}\n\nconst doesConnectionSupportPrefetch = () => {\n  if (\n    `connection` in navigator &&\n    typeof navigator.connection !== `undefined`\n  ) {\n    if ((navigator.connection.effectiveType || ``).includes(`2g`)) {\n      return false\n    }\n    if (navigator.connection.saveData) {\n      return false\n    }\n  }\n  return true\n}\n\n// Regex that matches common search crawlers\nconst BOT_REGEX = /bot|crawler|spider|crawling/i\n\nconst toPageResources = (pageData, component = null, head) => {\n  const page = {\n    componentChunkName: pageData.componentChunkName,\n    path: pageData.path,\n    webpackCompilationHash: pageData.webpackCompilationHash,\n    matchPath: pageData.matchPath,\n    staticQueryHashes: pageData.staticQueryHashes,\n    getServerDataError: pageData.getServerDataError,\n    slicesMap: pageData.slicesMap ?? {},\n  }\n\n  return {\n    component,\n    head,\n    json: pageData.result,\n    page,\n  }\n}\n\nfunction waitForResponse(response) {\n  return new Promise(resolve => {\n    try {\n      const result = response.readRoot()\n      resolve(result)\n    } catch (err) {\n      if (\n        Object.hasOwnProperty.call(err, `_response`) &&\n        Object.hasOwnProperty.call(err, `_status`)\n      ) {\n        setTimeout(() => {\n          waitForResponse(response).then(resolve)\n        }, 200)\n      } else {\n        throw err\n      }\n    }\n  })\n}\n\nexport class BaseLoader {\n  constructor(loadComponent, matchPaths) {\n    // Map of pagePath -> Page. Where Page is an object with: {\n    //   status: PageResourceStatus.Success || PageResourceStatus.Error,\n    //   payload: PageResources, // undefined if PageResourceStatus.Error\n    // }\n    // PageResources is {\n    //   component,\n    //   json: pageData.result,\n    //   page: {\n    //     componentChunkName,\n    //     path,\n    //     webpackCompilationHash,\n    //     staticQueryHashes\n    //   },\n    //   staticQueryResults\n    // }\n    this.pageDb = new Map()\n    this.inFlightDb = new Map()\n    this.staticQueryDb = {}\n    this.pageDataDb = new Map()\n    this.partialHydrationDb = new Map()\n    this.slicesDataDb = new Map()\n    this.sliceInflightDb = new Map()\n    this.slicesDb = new Map()\n    this.isPrefetchQueueRunning = false\n    this.prefetchQueued = []\n    this.prefetchTriggered = new Set()\n    this.prefetchCompleted = new Set()\n    this.loadComponent = loadComponent\n    setMatchPaths(matchPaths)\n  }\n\n  inFlightNetworkRequests = new Map()\n\n  memoizedGet(url) {\n    let inFlightPromise = this.inFlightNetworkRequests.get(url)\n\n    if (!inFlightPromise) {\n      inFlightPromise = doFetch(url, `GET`)\n      this.inFlightNetworkRequests.set(url, inFlightPromise)\n    }\n\n    // Prefer duplication with then + catch over .finally to prevent problems in ie11 + firefox\n    return inFlightPromise\n      .then(response => {\n        this.inFlightNetworkRequests.delete(url)\n        return response\n      })\n      .catch(err => {\n        this.inFlightNetworkRequests.delete(url)\n        throw err\n      })\n  }\n\n  setApiRunner(apiRunner) {\n    this.apiRunner = apiRunner\n    this.prefetchDisabled = apiRunner(`disableCorePrefetching`).some(a => a)\n  }\n\n  fetchPageDataJson(loadObj) {\n    const { pagePath, retries = 0 } = loadObj\n    const url = createPageDataUrl(pagePath)\n    return this.memoizedGet(url).then(req => {\n      const { status, responseText } = req\n\n      // Handle 200\n      if (status === 200) {\n        try {\n          const jsonPayload = JSON.parse(responseText)\n          if (jsonPayload.path === undefined) {\n            throw new Error(`not a valid pageData response`)\n          }\n\n          const maybeSearch = pagePath.split(`?`)[1]\n          if (maybeSearch && !jsonPayload.path.includes(maybeSearch)) {\n            jsonPayload.path += `?${maybeSearch}`\n          }\n\n          return Object.assign(loadObj, {\n            status: PageResourceStatus.Success,\n            payload: jsonPayload,\n          })\n        } catch (err) {\n          // continue regardless of error\n        }\n      }\n\n      // Handle 404\n      if (status === 404 || status === 200) {\n        // If the request was for a 404/500 page and it doesn't exist, we're done\n        if (pagePath === `/404.html` || pagePath === `/500.html`) {\n          return Object.assign(loadObj, {\n            status: PageResourceStatus.Error,\n          })\n        }\n\n        // Need some code here to cache the 404 request. In case\n        // multiple loadPageDataJsons result in 404s\n        return this.fetchPageDataJson(\n          Object.assign(loadObj, { pagePath: `/404.html`, notFound: true })\n        )\n      }\n\n      // handle 500 response (Unrecoverable)\n      if (status === 500) {\n        return this.fetchPageDataJson(\n          Object.assign(loadObj, {\n            pagePath: `/500.html`,\n            internalServerError: true,\n          })\n        )\n      }\n\n      // Handle everything else, including status === 0, and 503s. Should retry\n      if (retries < 3) {\n        return this.fetchPageDataJson(\n          Object.assign(loadObj, { retries: retries + 1 })\n        )\n      }\n\n      // Retried 3 times already, result is an error.\n      return Object.assign(loadObj, {\n        status: PageResourceStatus.Error,\n      })\n    })\n  }\n\n  fetchPartialHydrationJson(loadObj) {\n    const { pagePath, retries = 0 } = loadObj\n    const url = createPageDataUrl(pagePath).replace(`.json`, `-rsc.json`)\n    return this.memoizedGet(url).then(req => {\n      const { status, responseText } = req\n\n      // Handle 200\n      if (status === 200) {\n        try {\n          return Object.assign(loadObj, {\n            status: PageResourceStatus.Success,\n            payload: responseText,\n          })\n        } catch (err) {\n          // continue regardless of error\n        }\n      }\n\n      // Handle 404\n      if (status === 404 || status === 200) {\n        // If the request was for a 404/500 page and it doesn't exist, we're done\n        if (pagePath === `/404.html` || pagePath === `/500.html`) {\n          return Object.assign(loadObj, {\n            status: PageResourceStatus.Error,\n          })\n        }\n\n        // Need some code here to cache the 404 request. In case\n        // multiple loadPageDataJsons result in 404s\n        return this.fetchPartialHydrationJson(\n          Object.assign(loadObj, { pagePath: `/404.html`, notFound: true })\n        )\n      }\n\n      // handle 500 response (Unrecoverable)\n      if (status === 500) {\n        return this.fetchPartialHydrationJson(\n          Object.assign(loadObj, {\n            pagePath: `/500.html`,\n            internalServerError: true,\n          })\n        )\n      }\n\n      // Handle everything else, including status === 0, and 503s. Should retry\n      if (retries < 3) {\n        return this.fetchPartialHydrationJson(\n          Object.assign(loadObj, { retries: retries + 1 })\n        )\n      }\n\n      // Retried 3 times already, result is an error.\n      return Object.assign(loadObj, {\n        status: PageResourceStatus.Error,\n      })\n    })\n  }\n\n  loadPageDataJson(rawPath) {\n    const pagePath = findPath(rawPath)\n    if (this.pageDataDb.has(pagePath)) {\n      const pageData = this.pageDataDb.get(pagePath)\n      if (process.env.BUILD_STAGE !== `develop` || !pageData.stale) {\n        return Promise.resolve(pageData)\n      }\n    }\n\n    return this.fetchPageDataJson({ pagePath }).then(pageData => {\n      this.pageDataDb.set(pagePath, pageData)\n\n      return pageData\n    })\n  }\n\n  loadPartialHydrationJson(rawPath) {\n    const pagePath = findPath(rawPath)\n    if (this.partialHydrationDb.has(pagePath)) {\n      const pageData = this.partialHydrationDb.get(pagePath)\n      if (process.env.BUILD_STAGE !== `develop` || !pageData.stale) {\n        return Promise.resolve(pageData)\n      }\n    }\n\n    return this.fetchPartialHydrationJson({ pagePath }).then(pageData => {\n      this.partialHydrationDb.set(pagePath, pageData)\n\n      return pageData\n    })\n  }\n\n  loadSliceDataJson(sliceName) {\n    if (this.slicesDataDb.has(sliceName)) {\n      const jsonPayload = this.slicesDataDb.get(sliceName)\n      return Promise.resolve({ sliceName, jsonPayload })\n    }\n\n    const url = `${__PATH_PREFIX__}/slice-data/${sliceName}.json`\n    return doFetch(url, `GET`).then(res => {\n      const jsonPayload = JSON.parse(res.responseText)\n\n      this.slicesDataDb.set(sliceName, jsonPayload)\n      return { sliceName, jsonPayload }\n    })\n  }\n\n  findMatchPath(rawPath) {\n    return findMatchPath(rawPath)\n  }\n\n  // TODO check all uses of this and whether they use undefined for page resources not exist\n  loadPage(rawPath) {\n    const pagePath = findPath(rawPath)\n    if (this.pageDb.has(pagePath)) {\n      const page = this.pageDb.get(pagePath)\n      if (process.env.BUILD_STAGE !== `develop` || !page.payload.stale) {\n        if (page.error) {\n          return Promise.resolve({\n            error: page.error,\n            status: page.status,\n          })\n        }\n\n        return Promise.resolve(page.payload)\n      }\n    }\n\n    if (this.inFlightDb.has(pagePath)) {\n      return this.inFlightDb.get(pagePath)\n    }\n\n    const loadDataPromises = [\n      this.loadAppData(),\n      this.loadPageDataJson(pagePath),\n    ]\n\n    if (global.hasPartialHydration) {\n      loadDataPromises.push(this.loadPartialHydrationJson(pagePath))\n    }\n\n    const inFlightPromise = Promise.all(loadDataPromises).then(allData => {\n      const [appDataResponse, pageDataResponse, rscDataResponse] = allData\n\n      if (\n        pageDataResponse.status === PageResourceStatus.Error ||\n        rscDataResponse?.status === PageResourceStatus.Error\n      ) {\n        return {\n          status: PageResourceStatus.Error,\n        }\n      }\n\n      let pageData = pageDataResponse.payload\n\n      const {\n        componentChunkName,\n        staticQueryHashes: pageStaticQueryHashes = [],\n        slicesMap = {},\n      } = pageData\n\n      const finalResult = {}\n\n      const dedupedSliceNames = Array.from(new Set(Object.values(slicesMap)))\n\n      const loadSlice = slice => {\n        if (this.slicesDb.has(slice.name)) {\n          return this.slicesDb.get(slice.name)\n        } else if (this.sliceInflightDb.has(slice.name)) {\n          return this.sliceInflightDb.get(slice.name)\n        }\n\n        const inFlight = this.loadComponent(slice.componentChunkName).then(\n          component => {\n            return {\n              component: preferDefault(component),\n              sliceContext: slice.result.sliceContext,\n              data: slice.result.data,\n            }\n          }\n        )\n\n        this.sliceInflightDb.set(slice.name, inFlight)\n        inFlight.then(results => {\n          this.slicesDb.set(slice.name, results)\n          this.sliceInflightDb.delete(slice.name)\n        })\n\n        return inFlight\n      }\n\n      return Promise.all(\n        dedupedSliceNames.map(sliceName => this.loadSliceDataJson(sliceName))\n      ).then(slicesData => {\n        const slices = []\n        const dedupedStaticQueryHashes = [...pageStaticQueryHashes]\n\n        for (const { jsonPayload, sliceName } of Object.values(slicesData)) {\n          slices.push({ name: sliceName, ...jsonPayload })\n          for (const staticQueryHash of jsonPayload.staticQueryHashes) {\n            if (!dedupedStaticQueryHashes.includes(staticQueryHash)) {\n              dedupedStaticQueryHashes.push(staticQueryHash)\n            }\n          }\n        }\n\n        const loadChunkPromises = [\n          Promise.all(slices.map(loadSlice)),\n          this.loadComponent(componentChunkName, `head`),\n        ]\n\n        if (!global.hasPartialHydration) {\n          loadChunkPromises.push(this.loadComponent(componentChunkName))\n        }\n\n        // In develop we have separate chunks for template and Head components\n        // to enable HMR (fast refresh requires single exports).\n        // In production we have shared chunk with both exports. Double loadComponent here\n        // will be deduped by webpack runtime resulting in single request and single module\n        // being loaded for both `component` and `head`.\n        // get list of components to get\n        const componentChunkPromises = Promise.all(loadChunkPromises).then(\n          components => {\n            const [sliceComponents, headComponent, pageComponent] = components\n\n            finalResult.createdAt = new Date()\n\n            for (const sliceComponent of sliceComponents) {\n              if (!sliceComponent || sliceComponent instanceof Error) {\n                finalResult.status = PageResourceStatus.Error\n                finalResult.error = sliceComponent\n              }\n            }\n\n            if (\n              !global.hasPartialHydration &&\n              (!pageComponent || pageComponent instanceof Error)\n            ) {\n              finalResult.status = PageResourceStatus.Error\n              finalResult.error = pageComponent\n            }\n\n            let pageResources\n\n            if (finalResult.status !== PageResourceStatus.Error) {\n              finalResult.status = PageResourceStatus.Success\n              if (\n                pageDataResponse.notFound === true ||\n                rscDataResponse?.notFound === true\n              ) {\n                finalResult.notFound = true\n              }\n              pageData = Object.assign(pageData, {\n                webpackCompilationHash: appDataResponse\n                  ? appDataResponse.webpackCompilationHash\n                  : ``,\n              })\n\n              if (typeof rscDataResponse?.payload === `string`) {\n                pageResources = toPageResources(pageData, null, headComponent)\n\n                pageResources.partialHydration = rscDataResponse.payload\n\n                const readableStream = new ReadableStream({\n                  start(controller) {\n                    const te = new TextEncoder()\n                    controller.enqueue(te.encode(rscDataResponse.payload))\n                  },\n                  pull(controller) {\n                    // close on next read when queue is empty\n                    controller.close()\n                  },\n                  cancel() {},\n                })\n\n                return waitForResponse(\n                  createFromReadableStream(readableStream)\n                ).then(result => {\n                  pageResources.partialHydration = result\n\n                  return pageResources\n                })\n              } else {\n                pageResources = toPageResources(\n                  pageData,\n                  pageComponent,\n                  headComponent\n                )\n              }\n            }\n\n            // undefined if final result is an error\n            return pageResources\n          }\n        )\n\n        // get list of static queries to get\n        const staticQueryBatchPromise = Promise.all(\n          dedupedStaticQueryHashes.map(staticQueryHash => {\n            // Check for cache in case this static query result has already been loaded\n            if (this.staticQueryDb[staticQueryHash]) {\n              const jsonPayload = this.staticQueryDb[staticQueryHash]\n              return { staticQueryHash, jsonPayload }\n            }\n\n            return this.memoizedGet(\n              `${__PATH_PREFIX__}/page-data/sq/d/${staticQueryHash}.json`\n            )\n              .then(req => {\n                const jsonPayload = JSON.parse(req.responseText)\n                return { staticQueryHash, jsonPayload }\n              })\n              .catch(() => {\n                throw new Error(\n                  `We couldn't load \"${__PATH_PREFIX__}/page-data/sq/d/${staticQueryHash}.json\"`\n                )\n              })\n          })\n        ).then(staticQueryResults => {\n          const staticQueryResultsMap = {}\n\n          staticQueryResults.forEach(({ staticQueryHash, jsonPayload }) => {\n            staticQueryResultsMap[staticQueryHash] = jsonPayload\n            this.staticQueryDb[staticQueryHash] = jsonPayload\n          })\n\n          return staticQueryResultsMap\n        })\n\n        return (\n          Promise.all([componentChunkPromises, staticQueryBatchPromise])\n            .then(([pageResources, staticQueryResults]) => {\n              let payload\n              if (pageResources) {\n                payload = { ...pageResources, staticQueryResults }\n                finalResult.payload = payload\n                emitter.emit(`onPostLoadPageResources`, {\n                  page: payload,\n                  pageResources: payload,\n                })\n              }\n\n              this.pageDb.set(pagePath, finalResult)\n\n              if (finalResult.error) {\n                return {\n                  error: finalResult.error,\n                  status: finalResult.status,\n                }\n              }\n\n              return payload\n            })\n            // when static-query fail to load we throw a better error\n            .catch(err => {\n              return {\n                error: err,\n                status: PageResourceStatus.Error,\n              }\n            })\n        )\n      })\n    })\n\n    inFlightPromise\n      .then(() => {\n        this.inFlightDb.delete(pagePath)\n      })\n      .catch(error => {\n        this.inFlightDb.delete(pagePath)\n        throw error\n      })\n\n    this.inFlightDb.set(pagePath, inFlightPromise)\n\n    return inFlightPromise\n  }\n\n  // returns undefined if the page does not exists in cache\n  loadPageSync(rawPath, options = {}) {\n    const pagePath = findPath(rawPath)\n    if (this.pageDb.has(pagePath)) {\n      const pageData = this.pageDb.get(pagePath)\n\n      if (pageData.payload) {\n        return pageData.payload\n      }\n\n      if (options?.withErrorDetails) {\n        return {\n          error: pageData.error,\n          status: pageData.status,\n        }\n      }\n    }\n    return undefined\n  }\n\n  shouldPrefetch(pagePath) {\n    // Skip prefetching if we know user is on slow or constrained connection\n    if (!doesConnectionSupportPrefetch()) {\n      return false\n    }\n\n    // Don't prefetch if this is a crawler bot\n    if (navigator.userAgent && BOT_REGEX.test(navigator.userAgent)) {\n      return false\n    }\n\n    // Check if the page exists.\n    if (this.pageDb.has(pagePath)) {\n      return false\n    }\n\n    return true\n  }\n\n  prefetch(pagePath) {\n    if (!this.shouldPrefetch(pagePath)) {\n      return {\n        then: resolve => resolve(false),\n        abort: () => {},\n      }\n    }\n    if (this.prefetchTriggered.has(pagePath)) {\n      return {\n        then: resolve => resolve(true),\n        abort: () => {},\n      }\n    }\n\n    const defer = {\n      resolve: null,\n      reject: null,\n      promise: null,\n    }\n    defer.promise = new Promise((resolve, reject) => {\n      defer.resolve = resolve\n      defer.reject = reject\n    })\n    this.prefetchQueued.push([pagePath, defer])\n    const abortC = new AbortController()\n    abortC.signal.addEventListener(`abort`, () => {\n      const index = this.prefetchQueued.findIndex(([p]) => p === pagePath)\n      // remove from the queue\n      if (index !== -1) {\n        this.prefetchQueued.splice(index, 1)\n      }\n    })\n\n    if (!this.isPrefetchQueueRunning) {\n      this.isPrefetchQueueRunning = true\n      setTimeout(() => {\n        this._processNextPrefetchBatch()\n      }, 3000)\n    }\n\n    return {\n      then: (resolve, reject) => defer.promise.then(resolve, reject),\n      abort: abortC.abort.bind(abortC),\n    }\n  }\n\n  _processNextPrefetchBatch() {\n    const idleCallback = window.requestIdleCallback || (cb => setTimeout(cb, 0))\n\n    idleCallback(() => {\n      const toPrefetch = this.prefetchQueued.splice(0, 4)\n      const prefetches = Promise.all(\n        toPrefetch.map(([pagePath, dPromise]) => {\n          // Tell plugins with custom prefetching logic that they should start\n          // prefetching this path.\n          if (!this.prefetchTriggered.has(pagePath)) {\n            this.apiRunner(`onPrefetchPathname`, { pathname: pagePath })\n            this.prefetchTriggered.add(pagePath)\n          }\n\n          // If a plugin has disabled core prefetching, stop now.\n          if (this.prefetchDisabled) {\n            return dPromise.resolve(false)\n          }\n\n          return this.doPrefetch(findPath(pagePath)).then(() => {\n            if (!this.prefetchCompleted.has(pagePath)) {\n              this.apiRunner(`onPostPrefetchPathname`, { pathname: pagePath })\n              this.prefetchCompleted.add(pagePath)\n            }\n\n            dPromise.resolve(true)\n          })\n        })\n      )\n\n      if (this.prefetchQueued.length) {\n        prefetches.then(() => {\n          setTimeout(() => {\n            this._processNextPrefetchBatch()\n          }, 3000)\n        })\n      } else {\n        this.isPrefetchQueueRunning = false\n      }\n    })\n  }\n\n  doPrefetch(pagePath) {\n    const pageDataUrl = createPageDataUrl(pagePath)\n\n    if (global.hasPartialHydration) {\n      return Promise.all([\n        prefetchHelper(pageDataUrl, {\n          crossOrigin: `anonymous`,\n          as: `fetch`,\n        }).then(() =>\n          // This was just prefetched, so will return a response from\n          // the cache instead of making another request to the server\n          this.loadPageDataJson(pagePath)\n        ),\n        prefetchHelper(pageDataUrl.replace(`.json`, `-rsc.json`), {\n          crossOrigin: `anonymous`,\n          as: `fetch`,\n        }).then(() =>\n          // This was just prefetched, so will return a response from\n          // the cache instead of making another request to the server\n          this.loadPartialHydrationJson(pagePath)\n        ),\n      ])\n    } else {\n      return prefetchHelper(pageDataUrl, {\n        crossOrigin: `anonymous`,\n        as: `fetch`,\n      }).then(() =>\n        // This was just prefetched, so will return a response from\n        // the cache instead of making another request to the server\n        this.loadPageDataJson(pagePath)\n      )\n    }\n  }\n\n  hovering(rawPath) {\n    this.loadPage(rawPath)\n  }\n\n  getResourceURLsForPathname(rawPath) {\n    const pagePath = findPath(rawPath)\n    const page = this.pageDataDb.get(pagePath)\n    if (page) {\n      const pageResources = toPageResources(page.payload)\n\n      return [\n        ...createComponentUrls(pageResources.page.componentChunkName),\n        createPageDataUrl(pagePath),\n      ]\n    } else {\n      return null\n    }\n  }\n\n  isPageNotFound(rawPath) {\n    const pagePath = findPath(rawPath)\n    const page = this.pageDb.get(pagePath)\n    return !page || page.notFound\n  }\n\n  loadAppData(retries = 0) {\n    return this.memoizedGet(`${__PATH_PREFIX__}/page-data/app-data.json`).then(\n      req => {\n        const { status, responseText } = req\n\n        let appData\n\n        if (status !== 200 && retries < 3) {\n          // Retry 3 times incase of non-200 responses\n          return this.loadAppData(retries + 1)\n        }\n\n        // Handle 200\n        if (status === 200) {\n          try {\n            const jsonPayload = JSON.parse(responseText)\n            if (jsonPayload.webpackCompilationHash === undefined) {\n              throw new Error(`not a valid app-data response`)\n            }\n\n            appData = jsonPayload\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        return appData\n      }\n    )\n  }\n}\n\nconst createComponentUrls = componentChunkName =>\n  (window.___chunkMapping[componentChunkName] || []).map(\n    chunk => __PATH_PREFIX__ + chunk\n  )\n\nexport class ProdLoader extends BaseLoader {\n  constructor(asyncRequires, matchPaths, pageData) {\n    const loadComponent = (chunkName, exportType = `components`) => {\n      if (!global.hasPartialHydration) {\n        exportType = `components`\n      }\n\n      if (!asyncRequires[exportType][chunkName]) {\n        throw new Error(\n          `We couldn't find the correct component chunk with the name \"${chunkName}\"`\n        )\n      }\n\n      return (\n        asyncRequires[exportType][chunkName]()\n          // loader will handle the case when component is error\n          .catch(err => err)\n      )\n    }\n\n    super(loadComponent, matchPaths)\n\n    if (pageData) {\n      this.pageDataDb.set(findPath(pageData.path), {\n        pagePath: pageData.path,\n        payload: pageData,\n        status: `success`,\n      })\n    }\n  }\n\n  doPrefetch(pagePath) {\n    return super.doPrefetch(pagePath).then(result => {\n      if (result.status !== PageResourceStatus.Success) {\n        return Promise.resolve()\n      }\n      const pageData = result.payload\n      const chunkName = pageData.componentChunkName\n      const componentUrls = createComponentUrls(chunkName)\n      return Promise.all(componentUrls.map(prefetchHelper)).then(() => pageData)\n    })\n  }\n\n  loadPageDataJson(rawPath) {\n    return super.loadPageDataJson(rawPath).then(data => {\n      if (data.notFound) {\n        if (shouldAbortFetch(rawPath)) {\n          return data\n        }\n        // check if html file exist using HEAD request:\n        // if it does we should navigate to it instead of showing 404\n        return doFetch(rawPath, `HEAD`).then(req => {\n          if (req.status === 200) {\n            // page (.html file) actually exist (or we asked for 404 )\n            // returning page resources status as errored to trigger\n            // regular browser navigation to given page\n            return {\n              status: PageResourceStatus.Error,\n            }\n          }\n\n          // if HEAD request wasn't 200, return notFound result\n          // and show 404 page\n          return data\n        })\n      }\n      return data\n    })\n  }\n\n  loadPartialHydrationJson(rawPath) {\n    return super.loadPartialHydrationJson(rawPath).then(data => {\n      if (data.notFound) {\n        if (shouldAbortFetch(rawPath)) {\n          return data\n        }\n        // check if html file exist using HEAD request:\n        // if it does we should navigate to it instead of showing 404\n        return doFetch(rawPath, `HEAD`).then(req => {\n          if (req.status === 200) {\n            // page (.html file) actually exist (or we asked for 404 )\n            // returning page resources status as errored to trigger\n            // regular browser navigation to given page\n            return {\n              status: PageResourceStatus.Error,\n            }\n          }\n\n          // if HEAD request wasn't 200, return notFound result\n          // and show 404 page\n          return data\n        })\n      }\n      return data\n    })\n  }\n}\n\nlet instance\n\nexport const setLoader = _loader => {\n  instance = _loader\n}\n\nexport const publicLoader = {\n  enqueue: rawPath => instance.prefetch(rawPath),\n\n  // Real methods\n  getResourceURLsForPathname: rawPath =>\n    instance.getResourceURLsForPathname(rawPath),\n  loadPage: rawPath => instance.loadPage(rawPath),\n  // TODO add deprecation to v4 so people use withErrorDetails and then we can remove in v5 and change default behaviour\n  loadPageSync: (rawPath, options = {}) =>\n    instance.loadPageSync(rawPath, options),\n  prefetch: rawPath => instance.prefetch(rawPath),\n  isPageNotFound: rawPath => instance.isPageNotFound(rawPath),\n  hovering: rawPath => instance.hovering(rawPath),\n  loadAppData: () => instance.loadAppData(),\n}\n\nexport default publicLoader\n\nexport function getStaticQueryResults() {\n  if (instance) {\n    return instance.staticQueryDb\n  } else {\n    return {}\n  }\n}\n\nexport function getSliceResults() {\n  if (instance) {\n    return instance.slicesDb\n  } else {\n    return {}\n  }\n}\n","import { useEffect } from \"react\"\n\n/*\n * Calls callback in an effect and renders children\n */\nexport function FireCallbackInEffect({ children, callback }) {\n  useEffect(() => {\n    callback()\n  })\n\n  return children\n}\n","export const VALID_NODE_NAMES = [\n  `link`,\n  `meta`,\n  `style`,\n  `title`,\n  `base`,\n  `noscript`,\n  `script`,\n  `html`,\n  `body`,\n]\n","import { VALID_NODE_NAMES } from \"./constants\"\n\n/**\n * Filter the props coming from a page down to just the ones that are relevant for head.\n * This e.g. filters out properties that are undefined during SSR.\n */\nexport function filterHeadProps(input) {\n  return {\n    location: {\n      pathname: input.location.pathname,\n    },\n    params: input.params,\n    data: input.data || {},\n    serverData: input.serverData,\n    pageContext: input.pageContext,\n  }\n}\n\n/**\n * Throw error if Head export is not a valid function\n */\nexport function headExportValidator(head) {\n  if (typeof head !== `function`)\n    throw new Error(\n      `Expected \"Head\" export to be a function got \"${typeof head}\".`\n    )\n}\n\n/**\n * Warn once for same messsage\n */\nlet warnOnce = _ => {}\nif (process.env.NODE_ENV !== `production`) {\n  const warnings = new Set()\n  warnOnce = msg => {\n    if (!warnings.has(msg)) {\n      console.warn(msg)\n    }\n    warnings.add(msg)\n  }\n}\n\n/**\n * Warn for invalid tags in Head which may have been directly added or introduced by `wrapRootElement`\n * @param {string} tagName\n */\nexport function warnForInvalidTag(tagName) {\n  if (process.env.NODE_ENV !== `production`) {\n    const warning = createWarningForInvalidTag(tagName)\n    warnOnce(warning)\n  }\n}\n\nfunction createWarningForInvalidTag(tagName) {\n  return `<${tagName}> is not a valid head element. Please use one of the following: ${VALID_NODE_NAMES.join(\n    `, `\n  )}.\\n\\nAlso make sure that wrapRootElement in gatsby-ssr/gatsby-browser doesn't contain UI elements: https://gatsby.dev/invalid-head-elements`\n}\n\n/**\n * When a `nonce` is present on an element, browsers such as Chrome and Firefox strip it out of the\n * actual HTML attributes for security reasons *when the element is added to the document*. Thus,\n * given two equivalent elements that have nonces, `Element,isEqualNode()` will return false if one\n * of those elements gets added to the document. Although the `element.nonce` property will be the\n * same for both elements, the one that was added to the document will return an empty string for\n * its nonce HTML attribute value.\n *\n * This custom `isEqualNode()` function therefore removes the nonce value from the `newTag` before\n * comparing it to `oldTag`, restoring it afterwards.\n *\n * For more information, see:\n * https://bugs.chromium.org/p/chromium/issues/detail?id=1211471#c12\n */\nexport function isEqualNode(oldTag, newTag) {\n  if (oldTag instanceof HTMLElement && newTag instanceof HTMLElement) {\n    const nonce = newTag.getAttribute(`nonce`)\n    // Only strip the nonce if `oldTag` has had it stripped. An element's nonce attribute will not\n    // be stripped if there is no content security policy response header that includes a nonce.\n    if (nonce && !oldTag.getAttribute(`nonce`)) {\n      const cloneTag = newTag.cloneNode(true)\n      cloneTag.setAttribute(`nonce`, ``)\n      cloneTag.nonce = nonce\n      return nonce === oldTag.nonce && oldTag.isEqualNode(cloneTag)\n    }\n  }\n\n  return oldTag.isEqualNode(newTag)\n}\n\nexport function diffNodes({ oldNodes, newNodes, onStale, onNew }) {\n  for (const existingHeadElement of oldNodes) {\n    const indexInNewNodes = newNodes.findIndex(e =>\n      isEqualNode(e, existingHeadElement)\n    )\n\n    if (indexInNewNodes === -1) {\n      onStale(existingHeadElement)\n    } else {\n      // this node is re-created as-is, so we keep old node, and remove it from list of new nodes (as we handled it already here)\n      newNodes.splice(indexInNewNodes, 1)\n    }\n  }\n\n  // remaing new nodes didn't have matching old node, so need to be added\n  for (const newNode of newNodes) {\n    onNew(newNode)\n  }\n}\n\nexport function getValidHeadNodesAndAttributes(\n  rootNode,\n  htmlAndBodyAttributes = {\n    html: {},\n    body: {},\n  }\n) {\n  const seenIds = new Map()\n  const validHeadNodes = []\n\n  // Filter out non-element nodes before looping since we don't care about them\n  for (const node of rootNode.childNodes) {\n    const nodeName = node.nodeName.toLowerCase()\n    const id = node.attributes?.id?.value\n\n    if (!isElementType(node)) continue\n\n    if (isValidNodeName(nodeName)) {\n      // <html> and <body> tags are treated differently, in that we don't render them, we only extract the attributes and apply them separetely\n      if (nodeName === `html` || nodeName === `body`) {\n        for (const attribute of node.attributes) {\n          const isStyleAttribute = attribute.name === `style`\n\n          // Merge attributes for same nodeName from previous loop iteration\n          htmlAndBodyAttributes[nodeName] = {\n            ...htmlAndBodyAttributes[nodeName],\n          }\n\n          if (!isStyleAttribute) {\n            htmlAndBodyAttributes[nodeName][attribute.name] = attribute.value\n          }\n\n          // If there is already a style attribute, we need to merge them as otherwise the last one will \"win\"\n          if (isStyleAttribute) {\n            htmlAndBodyAttributes[nodeName].style = `${\n              htmlAndBodyAttributes[nodeName]?.style\n                ? htmlAndBodyAttributes[nodeName].style\n                : ``\n            }${attribute.value} `\n          }\n        }\n      } else {\n        let clonedNode = node.cloneNode(true)\n        clonedNode.setAttribute(`data-gatsby-head`, true)\n\n        // // This is hack to make script tags work\n        if (clonedNode.nodeName.toLowerCase() === `script`) {\n          clonedNode = massageScript(clonedNode)\n        }\n        // Duplicate ids are not allowed in the head, so we need to dedupe them\n        if (id) {\n          if (!seenIds.has(id)) {\n            validHeadNodes.push(clonedNode)\n            seenIds.set(id, validHeadNodes.length - 1)\n          } else {\n            const indexOfPreviouslyInsertedNode = seenIds.get(id)\n            validHeadNodes[\n              indexOfPreviouslyInsertedNode\n            ].parentNode?.removeChild(\n              validHeadNodes[indexOfPreviouslyInsertedNode]\n            )\n            validHeadNodes[indexOfPreviouslyInsertedNode] = clonedNode\n          }\n        } else {\n          validHeadNodes.push(clonedNode)\n        }\n      }\n    } else {\n      warnForInvalidTag(nodeName)\n    }\n\n    if (node.childNodes.length) {\n      validHeadNodes.push(\n        ...getValidHeadNodesAndAttributes(node, htmlAndBodyAttributes)\n          .validHeadNodes\n      )\n    }\n  }\n\n  return { validHeadNodes, htmlAndBodyAttributes }\n}\n\nfunction massageScript(node) {\n  const script = document.createElement(`script`)\n  for (const attr of node.attributes) {\n    script.setAttribute(attr.name, attr.value)\n  }\n  script.innerHTML = node.innerHTML\n\n  return script\n}\n\nexport function isValidNodeName(nodeName) {\n  return VALID_NODE_NAMES.includes(nodeName)\n}\n/*\n * For Head, we only care about element nodes(type = 1), so this util is used to skip over non-element nodes\n * For Node type, see https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n */\nexport function isElementType(node) {\n  return node.nodeType === 1\n}\n\n/**\n * Removes all the head elements that were added by `Head`\n */\nexport function removePrevHeadElements() {\n  const prevHeadNodes = document.querySelectorAll(`[data-gatsby-head]`)\n  for (const node of prevHeadNodes) {\n    node.parentNode.removeChild(node)\n  }\n}\n\nexport function applyHtmlAndBodyAttributes(htmlAndBodyAttributes) {\n  if (!htmlAndBodyAttributes) return\n\n  const { html, body } = htmlAndBodyAttributes\n\n  const htmlElement = document.querySelector(`html`)\n  if (htmlElement) {\n    Object.entries(html).forEach(([attributeName, attributeValue]) => {\n      htmlElement.setAttribute(attributeName, attributeValue)\n    })\n  }\n\n  const bodyElement = document.querySelector(`body`)\n  if (bodyElement) {\n    Object.entries(body).forEach(([attributeName, attributeValue]) => {\n      bodyElement.setAttribute(attributeName, attributeValue)\n    })\n  }\n}\n\nexport function removeHtmlAndBodyAttributes(htmlAndBodyattributeList) {\n  if (!htmlAndBodyattributeList) return\n\n  const { html, body } = htmlAndBodyattributeList\n\n  if (html) {\n    const htmlElement = document.querySelector(`html`)\n    html.forEach(attributeName => {\n      if (htmlElement) {\n        htmlElement.removeAttribute(attributeName)\n      }\n    })\n  }\n\n  if (body) {\n    const bodyElement = document.querySelector(`body`)\n    body.forEach(attributeName => {\n      if (bodyElement) {\n        bodyElement.removeAttribute(attributeName)\n      }\n    })\n  }\n}\n","import React from \"react\"\nimport { useEffect } from \"react\"\nimport { StaticQueryContext } from \"gatsby\"\nimport { LocationProvider } from \"@gatsbyjs/reach-router\"\nimport { reactDOMUtils } from \"../react-dom-utils\"\nimport { FireCallbackInEffect } from \"./components/fire-callback-in-effect\"\nimport {\n  headExportValidator,\n  filterHeadProps,\n  diffNodes,\n  getValidHeadNodesAndAttributes,\n  removePrevHeadElements,\n  applyHtmlAndBodyAttributes,\n  removeHtmlAndBodyAttributes,\n} from \"./utils\"\nimport { apiRunner } from \"../api-runner-browser\"\n\nconst hiddenRoot = document.createElement(`div`)\nconst keysOfHtmlAndBodyAttributes = {\n  html: [],\n  body: [],\n}\n\nconst onHeadRendered = () => {\n  const { validHeadNodes, htmlAndBodyAttributes } =\n    getValidHeadNodesAndAttributes(hiddenRoot)\n\n  keysOfHtmlAndBodyAttributes.html = Object.keys(htmlAndBodyAttributes.html)\n  keysOfHtmlAndBodyAttributes.body = Object.keys(htmlAndBodyAttributes.body)\n\n  applyHtmlAndBodyAttributes(htmlAndBodyAttributes)\n\n  /**\n   * The rest of the code block below is a diffing mechanism to ensure that\n   * the head elements aren't duplicted on every re-render.\n   */\n  const existingHeadElements = document.querySelectorAll(`[data-gatsby-head]`)\n\n  if (existingHeadElements.length === 0) {\n    document.head.append(...validHeadNodes)\n    return\n  }\n\n  const newHeadNodes = []\n  diffNodes({\n    oldNodes: existingHeadElements,\n    newNodes: validHeadNodes,\n    onStale: node => node.parentNode.removeChild(node),\n    onNew: node => newHeadNodes.push(node),\n  })\n\n  document.head.append(...newHeadNodes)\n}\n\nif (process.env.BUILD_STAGE === `develop`) {\n  // sigh ... <html> and <body> elements are not valid descedents of <div> (our hidden element)\n  // react-dom in dev mode will warn about this. There doesn't seem to be a way to render arbitrary\n  // user Head without hitting this issue (our hidden element could be just \"new Document()\", but\n  // this can only have 1 child, and we don't control what is being rendered so that's not an option)\n  // instead we continue to render to <div>, and just silence warnings for <html> and <body> elements\n  // https://github.com/facebook/react/blob/e2424f33b3ad727321fc12e75c5e94838e84c2b5/packages/react-dom-bindings/src/client/validateDOMNesting.js#L498-L520\n  const originalConsoleError = console.error.bind(console)\n  console.error = (...args) => {\n    if (\n      Array.isArray(args) &&\n      args.length >= 2 &&\n      args[0]?.includes?.(`validateDOMNesting(...): %s cannot appear as`) &&\n      (args[1] === `<html>` || args[1] === `<body>`)\n    ) {\n      return undefined\n    }\n    return originalConsoleError(...args)\n  }\n\n  /* We set up observer to be able to regenerate <head> after react-refresh\n     updates our hidden element.\n  */\n  const observer = new MutationObserver(onHeadRendered)\n  observer.observe(hiddenRoot, {\n    attributes: true,\n    childList: true,\n    characterData: true,\n    subtree: true,\n  })\n}\n\nexport function headHandlerForBrowser({\n  pageComponent,\n  staticQueryResults,\n  pageComponentProps,\n}) {\n  useEffect(() => {\n    if (pageComponent?.Head) {\n      headExportValidator(pageComponent.Head)\n\n      const { render } = reactDOMUtils()\n\n      const HeadElement = (\n        <pageComponent.Head {...filterHeadProps(pageComponentProps)} />\n      )\n\n      const WrapHeadElement = apiRunner(\n        `wrapRootElement`,\n        { element: HeadElement },\n        HeadElement,\n        ({ result }) => {\n          return { element: result }\n        }\n      ).pop()\n\n      render(\n        // just a hack to call the callback after react has done first render\n        // Note: In dev, we call onHeadRendered twice( in FireCallbackInEffect and after mutualution observer dectects initail render into hiddenRoot) this is for hot reloading\n        // In Prod we only call onHeadRendered in FireCallbackInEffect to render to head\n        <FireCallbackInEffect callback={onHeadRendered}>\n          <StaticQueryContext.Provider value={staticQueryResults}>\n            <LocationProvider>{WrapHeadElement}</LocationProvider>\n          </StaticQueryContext.Provider>\n        </FireCallbackInEffect>,\n        hiddenRoot\n      )\n    }\n\n    return () => {\n      removePrevHeadElements()\n      removeHtmlAndBodyAttributes(keysOfHtmlAndBodyAttributes)\n    }\n  })\n}\n","import React, { Suspense, createElement } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { apiRunner } from \"./api-runner-browser\"\nimport { grabMatchParams } from \"./find-path\"\nimport { headHandlerForBrowser } from \"./head/head-export-handler-for-browser\"\n\n// Renders page\nfunction PageRenderer(props) {\n  const pageComponentProps = {\n    ...props,\n    params: {\n      ...grabMatchParams(props.location.pathname),\n      ...props.pageResources.json.pageContext.__params,\n    },\n  }\n\n  const preferDefault = m => (m && m.default) || m\n\n  let pageElement\n  if (props.pageResources.partialHydration) {\n    pageElement = props.pageResources.partialHydration\n  } else {\n    pageElement = createElement(preferDefault(props.pageResources.component), {\n      ...pageComponentProps,\n      key: props.path || props.pageResources.page.path,\n    })\n  }\n\n  const pageComponent = props.pageResources.head\n\n  headHandlerForBrowser({\n    pageComponent,\n    staticQueryResults: props.pageResources.staticQueryResults,\n    pageComponentProps,\n  })\n\n  const wrappedPage = apiRunner(\n    `wrapPageElement`,\n    {\n      element: pageElement,\n      props: pageComponentProps,\n    },\n    pageElement,\n    ({ result }) => {\n      return { element: result, props: pageComponentProps }\n    }\n  ).pop()\n\n  return wrappedPage\n}\n\nPageRenderer.propTypes = {\n  location: PropTypes.object.isRequired,\n  pageResources: PropTypes.object.isRequired,\n  data: PropTypes.object,\n  pageContext: PropTypes.object.isRequired,\n}\n\nexport default PageRenderer\n","// This is extracted to separate module because it's shared\n// between browser and SSR code\nexport const RouteAnnouncerProps = {\n  id: `gatsby-announcer`,\n  style: {\n    position: `absolute`,\n    top: 0,\n    width: 1,\n    height: 1,\n    padding: 0,\n    overflow: `hidden`,\n    clip: `rect(0, 0, 0, 0)`,\n    whiteSpace: `nowrap`,\n    border: 0,\n  },\n  \"aria-live\": `assertive`,\n  \"aria-atomic\": `true`,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport loader, { PageResourceStatus } from \"./loader\"\nimport { maybeGetBrowserRedirect } from \"./redirect-utils.js\"\nimport { apiRunner } from \"./api-runner-browser\"\nimport emitter from \"./emitter\"\nimport { RouteAnnouncerProps } from \"./route-announcer-props\"\nimport {\n  navigate as reachNavigate,\n  globalHistory,\n} from \"@gatsbyjs/reach-router\"\nimport { parsePath } from \"gatsby-link\"\n\nfunction maybeRedirect(pathname) {\n  const redirect = maybeGetBrowserRedirect(pathname)\n  const { hash, search } = window.location\n\n  if (redirect != null) {\n    window.___replace(redirect.toPath + search + hash)\n    return true\n  } else {\n    return false\n  }\n}\n\n// Catch unhandled chunk loading errors and force a restart of the app.\nlet nextRoute = ``\n\nwindow.addEventListener(`unhandledrejection`, event => {\n  if (/loading chunk \\d* failed./i.test(event.reason)) {\n    if (nextRoute) {\n      window.location.pathname = nextRoute\n    }\n  }\n})\n\nconst onPreRouteUpdate = (location, prevLocation) => {\n  if (!maybeRedirect(location.pathname)) {\n    nextRoute = location.pathname\n    apiRunner(`onPreRouteUpdate`, { location, prevLocation })\n  }\n}\n\nconst onRouteUpdate = (location, prevLocation) => {\n  if (!maybeRedirect(location.pathname)) {\n    apiRunner(`onRouteUpdate`, { location, prevLocation })\n    if (\n      process.env.GATSBY_QUERY_ON_DEMAND &&\n      process.env.GATSBY_QUERY_ON_DEMAND_LOADING_INDICATOR === `true`\n    ) {\n      emitter.emit(`onRouteUpdate`, { location, prevLocation })\n    }\n  }\n}\n\nconst navigate = (to, options = {}) => {\n  // Support forward/backward navigation with numbers\n  // navigate(-2) (jumps back 2 history steps)\n  // navigate(2)  (jumps forward 2 history steps)\n  if (typeof to === `number`) {\n    globalHistory.navigate(to)\n    return\n  }\n\n  const { pathname, search, hash } = parsePath(to)\n  const redirect = maybeGetBrowserRedirect(pathname)\n\n  // If we're redirecting, just replace the passed in pathname\n  // to the one we want to redirect to.\n  if (redirect) {\n    to = redirect.toPath + search + hash\n  }\n\n  // If we had a service worker update, no matter the path, reload window and\n  // reset the pathname whitelist\n  if (window.___swUpdated) {\n    window.location = pathname + search + hash\n    return\n  }\n\n  // Start a timer to wait for a second before transitioning and showing a\n  // loader in case resources aren't around yet.\n  const timeoutId = setTimeout(() => {\n    emitter.emit(`onDelayedLoadPageResources`, { pathname })\n    apiRunner(`onRouteUpdateDelayed`, {\n      location: window.location,\n    })\n  }, 1000)\n\n  loader.loadPage(pathname + search).then(pageResources => {\n    // If no page resources, then refresh the page\n    // Do this, rather than simply `window.location.reload()`, so that\n    // pressing the back/forward buttons work - otherwise when pressing\n    // back, the browser will just change the URL and expect JS to handle\n    // the change, which won't always work since it might not be a Gatsby\n    // page.\n    if (!pageResources || pageResources.status === PageResourceStatus.Error) {\n      window.history.replaceState({}, ``, location.href)\n      window.location = pathname\n      clearTimeout(timeoutId)\n      return\n    }\n\n    // If the loaded page has a different compilation hash to the\n    // window, then a rebuild has occurred on the server. Reload.\n    if (process.env.NODE_ENV === `production` && pageResources) {\n      if (\n        pageResources.page.webpackCompilationHash !==\n        window.___webpackCompilationHash\n      ) {\n        // Purge plugin-offline cache\n        if (\n          `serviceWorker` in navigator &&\n          navigator.serviceWorker.controller !== null &&\n          navigator.serviceWorker.controller.state === `activated`\n        ) {\n          navigator.serviceWorker.controller.postMessage({\n            gatsbyApi: `clearPathResources`,\n          })\n        }\n\n        window.location = pathname + search + hash\n      }\n    }\n    reachNavigate(to, options)\n    clearTimeout(timeoutId)\n  })\n}\n\nfunction shouldUpdateScroll(prevRouterProps, { location }) {\n  const { pathname, hash } = location\n  const results = apiRunner(`shouldUpdateScroll`, {\n    prevRouterProps,\n    // `pathname` for backwards compatibility\n    pathname,\n    routerProps: { location },\n    getSavedScrollPosition: args => [\n      0,\n      // FIXME this is actually a big code smell, we should fix this\n      // eslint-disable-next-line @babel/no-invalid-this\n      this._stateStorage.read(args, args.key),\n    ],\n  })\n  if (results.length > 0) {\n    // Use the latest registered shouldUpdateScroll result, this allows users to override plugin's configuration\n    // @see https://github.com/gatsbyjs/gatsby/issues/12038\n    return results[results.length - 1]\n  }\n\n  if (prevRouterProps) {\n    const {\n      location: { pathname: oldPathname },\n    } = prevRouterProps\n    if (oldPathname === pathname) {\n      // Scroll to element if it exists, if it doesn't, or no hash is provided,\n      // scroll to top.\n      return hash ? decodeURI(hash.slice(1)) : [0, 0]\n    }\n  }\n  return true\n}\n\nfunction init() {\n  // The \"scroll-behavior\" package expects the \"action\" to be on the location\n  // object so let's copy it over.\n  globalHistory.listen(args => {\n    args.location.action = args.action\n  })\n\n  window.___push = to => navigate(to, { replace: false })\n  window.___replace = to => navigate(to, { replace: true })\n  window.___navigate = (to, options) => navigate(to, options)\n}\n\nclass RouteAnnouncer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.announcementRef = React.createRef()\n  }\n\n  componentDidUpdate(prevProps, nextProps) {\n    requestAnimationFrame(() => {\n      let pageName = `new page at ${this.props.location.pathname}`\n      if (document.title) {\n        pageName = document.title\n      }\n      const pageHeadings = document.querySelectorAll(`#gatsby-focus-wrapper h1`)\n      if (pageHeadings && pageHeadings.length) {\n        pageName = pageHeadings[0].textContent\n      }\n      const newAnnouncement = `Navigated to ${pageName}`\n      if (this.announcementRef.current) {\n        const oldAnnouncement = this.announcementRef.current.innerText\n        if (oldAnnouncement !== newAnnouncement) {\n          this.announcementRef.current.innerText = newAnnouncement\n        }\n      }\n    })\n  }\n\n  render() {\n    return <div {...RouteAnnouncerProps} ref={this.announcementRef}></div>\n  }\n}\n\nconst compareLocationProps = (prevLocation, nextLocation) => {\n  if (prevLocation.href !== nextLocation.href) {\n    return true\n  }\n\n  if (prevLocation?.state?.key !== nextLocation?.state?.key) {\n    return true\n  }\n\n  return false\n}\n\n// Fire on(Pre)RouteUpdate APIs\nclass RouteUpdates extends React.Component {\n  constructor(props) {\n    super(props)\n    onPreRouteUpdate(props.location, null)\n  }\n\n  componentDidMount() {\n    onRouteUpdate(this.props.location, null)\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (compareLocationProps(this.props.location, nextProps.location)) {\n      onPreRouteUpdate(nextProps.location, this.props.location)\n      return true\n    }\n    return false\n  }\n\n  componentDidUpdate(prevProps) {\n    if (compareLocationProps(prevProps.location, this.props.location)) {\n      onRouteUpdate(this.props.location, prevProps.location)\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.children}\n        <RouteAnnouncer location={location} />\n      </React.Fragment>\n    )\n  }\n}\n\nRouteUpdates.propTypes = {\n  location: PropTypes.object.isRequired,\n}\n\nexport { init, shouldUpdateScroll, RouteUpdates, maybeGetBrowserRedirect }\n","import React from \"react\"\nimport loader, { PageResourceStatus } from \"./loader\"\nimport shallowCompare from \"shallow-compare\"\n\nclass EnsureResources extends React.Component {\n  constructor(props) {\n    super()\n    const { location, pageResources } = props\n    this.state = {\n      location: { ...location },\n      pageResources:\n        pageResources ||\n        loader.loadPageSync(location.pathname + location.search, {\n          withErrorDetails: true,\n        }),\n    }\n  }\n\n  static getDerivedStateFromProps({ location }, prevState) {\n    if (prevState.location.href !== location.href) {\n      const pageResources = loader.loadPageSync(\n        location.pathname + location.search,\n        {\n          withErrorDetails: true,\n        }\n      )\n\n      return {\n        pageResources,\n        location: { ...location },\n      }\n    }\n\n    return {\n      location: { ...location },\n    }\n  }\n\n  loadResources(rawPath) {\n    loader.loadPage(rawPath).then(pageResources => {\n      if (pageResources && pageResources.status !== PageResourceStatus.Error) {\n        this.setState({\n          location: { ...window.location },\n          pageResources,\n        })\n      } else {\n        window.history.replaceState({}, ``, location.href)\n        window.location = rawPath\n      }\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Always return false if we're missing resources.\n    if (!nextState.pageResources) {\n      this.loadResources(\n        nextProps.location.pathname + nextProps.location.search\n      )\n      return false\n    }\n\n    if (\n      process.env.BUILD_STAGE === `develop` &&\n      nextState.pageResources.stale\n    ) {\n      this.loadResources(\n        nextProps.location.pathname + nextProps.location.search\n      )\n      return false\n    }\n\n    // Check if the component or json have changed.\n    if (this.state.pageResources !== nextState.pageResources) {\n      return true\n    }\n    if (\n      this.state.pageResources.component !== nextState.pageResources.component\n    ) {\n      return true\n    }\n\n    if (this.state.pageResources.json !== nextState.pageResources.json) {\n      return true\n    }\n    // Check if location has changed on a page using internal routing\n    // via matchPath configuration.\n    if (\n      this.state.location.key !== nextState.location.key &&\n      nextState.pageResources.page &&\n      (nextState.pageResources.page.matchPath ||\n        nextState.pageResources.page.path)\n    ) {\n      return true\n    }\n    return shallowCompare(this, nextProps, nextState)\n  }\n\n  render() {\n    if (\n      process.env.NODE_ENV !== `production` &&\n      (!this.state.pageResources ||\n        this.state.pageResources.status === PageResourceStatus.Error)\n    ) {\n      const message = `EnsureResources was not able to find resources for path: \"${this.props.location.pathname}\"\nThis typically means that an issue occurred building components for that path.\nRun \\`gatsby clean\\` to remove any cached elements.`\n      if (this.state.pageResources?.error) {\n        console.error(message)\n        throw this.state.pageResources.error\n      }\n\n      throw new Error(message)\n    }\n\n    return this.props.children(this.state)\n  }\n}\n\nexport default EnsureResources\n","import { apiRunner, apiRunnerAsync } from \"./api-runner-browser\"\nimport React from \"react\"\nimport { Router, navigate, Location, BaseContext } from \"@gatsbyjs/reach-router\"\nimport { ScrollContext } from \"gatsby-react-router-scroll\"\nimport { StaticQueryContext } from \"./static-query\"\nimport {\n  SlicesMapContext,\n  SlicesContext,\n  SlicesResultsContext,\n} from \"./slice/context\"\nimport {\n  shouldUpdateScroll,\n  init as navigationInit,\n  RouteUpdates,\n} from \"./navigation\"\nimport emitter from \"./emitter\"\nimport PageRenderer from \"./page-renderer\"\nimport asyncRequires from \"$virtual/async-requires\"\nimport {\n  setLoader,\n  ProdLoader,\n  publicLoader,\n  PageResourceStatus,\n  getStaticQueryResults,\n  getSliceResults,\n} from \"./loader\"\nimport EnsureResources from \"./ensure-resources\"\nimport stripPrefix from \"./strip-prefix\"\n\n// Generated during bootstrap\nimport matchPaths from \"$virtual/match-paths.json\"\nimport { reactDOMUtils } from \"./react-dom-utils\"\n\nconst loader = new ProdLoader(asyncRequires, matchPaths, window.pageData)\nsetLoader(loader)\nloader.setApiRunner(apiRunner)\n\nconst { render, hydrate } = reactDOMUtils()\n\nwindow.asyncRequires = asyncRequires\nwindow.___emitter = emitter\nwindow.___loader = publicLoader\n\nnavigationInit()\n\nconst reloadStorageKey = `gatsby-reload-compilation-hash-match`\n\napiRunnerAsync(`onClientEntry`).then(() => {\n  // Let plugins register a service worker. The plugin just needs\n  // to return true.\n  if (apiRunner(`registerServiceWorker`).filter(Boolean).length > 0) {\n    require(`./register-service-worker`)\n  }\n\n  // In gatsby v2 if Router is used in page using matchPaths\n  // paths need to contain full path.\n  // For example:\n  //   - page have `/app/*` matchPath\n  //   - inside template user needs to use `/app/xyz` as path\n  // Resetting `basepath`/`baseuri` keeps current behaviour\n  // to not introduce breaking change.\n  // Remove this in v3\n  const RouteHandler = props => (\n    <BaseContext.Provider\n      value={{\n        baseuri: `/`,\n        basepath: `/`,\n      }}\n    >\n      <PageRenderer {...props} />\n    </BaseContext.Provider>\n  )\n\n  const DataContext = React.createContext({})\n\n  const slicesContext = {\n    renderEnvironment: `browser`,\n  }\n\n  class GatsbyRoot extends React.Component {\n    render() {\n      const { children } = this.props\n      return (\n        <Location>\n          {({ location }) => (\n            <EnsureResources location={location}>\n              {({ pageResources, location }) => {\n                const staticQueryResults = getStaticQueryResults()\n                const sliceResults = getSliceResults()\n\n                return (\n                  <StaticQueryContext.Provider value={staticQueryResults}>\n                    <SlicesContext.Provider value={slicesContext}>\n                      <SlicesResultsContext.Provider value={sliceResults}>\n                        <SlicesMapContext.Provider\n                          value={pageResources.page.slicesMap}\n                        >\n                          <DataContext.Provider\n                            value={{ pageResources, location }}\n                          >\n                            {children}\n                          </DataContext.Provider>\n                        </SlicesMapContext.Provider>\n                      </SlicesResultsContext.Provider>\n                    </SlicesContext.Provider>\n                  </StaticQueryContext.Provider>\n                )\n              }}\n            </EnsureResources>\n          )}\n        </Location>\n      )\n    }\n  }\n\n  class LocationHandler extends React.Component {\n    render() {\n      return (\n        <DataContext.Consumer>\n          {({ pageResources, location }) => (\n            <RouteUpdates location={location}>\n              <ScrollContext\n                location={location}\n                shouldUpdateScroll={shouldUpdateScroll}\n              >\n                <Router\n                  basepath={__BASE_PATH__}\n                  location={location}\n                  id=\"gatsby-focus-wrapper\"\n                >\n                  <RouteHandler\n                    path={\n                      pageResources.page.path === `/404.html` ||\n                      pageResources.page.path === `/500.html`\n                        ? stripPrefix(location.pathname, __BASE_PATH__)\n                        : encodeURI(\n                            (\n                              pageResources.page.matchPath ||\n                              pageResources.page.path\n                            ).split(`?`)[0]\n                          )\n                    }\n                    {...this.props}\n                    location={location}\n                    pageResources={pageResources}\n                    {...pageResources.json}\n                  />\n                </Router>\n              </ScrollContext>\n            </RouteUpdates>\n          )}\n        </DataContext.Consumer>\n      )\n    }\n  }\n\n  const { pagePath, location: browserLoc } = window\n\n  // Explicitly call navigate if the canonical path (window.pagePath)\n  // is different to the browser path (window.location.pathname). SSR\n  // page paths might include search params, while SSG and DSG won't.\n  // If page path include search params we also compare query params.\n  // But only if NONE of the following conditions hold:\n  //\n  // - The url matches a client side route (page.matchPath)\n  // - it's a 404 page\n  // - it's the offline plugin shell (/offline-plugin-app-shell-fallback/)\n  if (\n    pagePath &&\n    __BASE_PATH__ + pagePath !==\n      browserLoc.pathname + (pagePath.includes(`?`) ? browserLoc.search : ``) &&\n    !(\n      loader.findMatchPath(stripPrefix(browserLoc.pathname, __BASE_PATH__)) ||\n      pagePath.match(/^\\/(404|500)(\\/?|.html)$/) ||\n      pagePath.match(/^\\/offline-plugin-app-shell-fallback\\/?$/)\n    )\n  ) {\n    navigate(\n      __BASE_PATH__ +\n        pagePath +\n        (!pagePath.includes(`?`) ? browserLoc.search : ``) +\n        browserLoc.hash,\n      {\n        replace: true,\n      }\n    )\n  }\n\n  // It's possible that sessionStorage can throw an exception if access is not granted, see https://github.com/gatsbyjs/gatsby/issues/34512\n  const getSessionStorage = () => {\n    try {\n      return sessionStorage\n    } catch {\n      return null\n    }\n  }\n\n  publicLoader.loadPage(browserLoc.pathname + browserLoc.search).then(page => {\n    const sessionStorage = getSessionStorage()\n\n    if (\n      page?.page?.webpackCompilationHash &&\n      page.page.webpackCompilationHash !== window.___webpackCompilationHash\n    ) {\n      // Purge plugin-offline cache\n      if (\n        `serviceWorker` in navigator &&\n        navigator.serviceWorker.controller !== null &&\n        navigator.serviceWorker.controller.state === `activated`\n      ) {\n        navigator.serviceWorker.controller.postMessage({\n          gatsbyApi: `clearPathResources`,\n        })\n      }\n\n      // We have not matching html + js (inlined `window.___webpackCompilationHash`)\n      // with our data (coming from `app-data.json` file). This can cause issues such as\n      // errors trying to load static queries (as list of static queries is inside `page-data`\n      // which might not match to currently loaded `.js` scripts).\n      // We are making attempt to reload if hashes don't match, but we also have to handle case\n      // when reload doesn't fix it (possibly broken deploy) so we don't end up in infinite reload loop\n      if (sessionStorage) {\n        const isReloaded = sessionStorage.getItem(reloadStorageKey) === `1`\n\n        if (!isReloaded) {\n          sessionStorage.setItem(reloadStorageKey, `1`)\n          window.location.reload(true)\n          return\n        }\n      }\n    }\n\n    if (sessionStorage) {\n      sessionStorage.removeItem(reloadStorageKey)\n    }\n\n    if (!page || page.status === PageResourceStatus.Error) {\n      const message = `page resources for ${browserLoc.pathname} not found. Not rendering React`\n\n      // if the chunk throws an error we want to capture the real error\n      // This should help with https://github.com/gatsbyjs/gatsby/issues/19618\n      if (page && page.error) {\n        console.error(message)\n        throw page.error\n      }\n\n      throw new Error(message)\n    }\n\n    const SiteRoot = apiRunner(\n      `wrapRootElement`,\n      { element: <LocationHandler /> },\n      <LocationHandler />,\n      ({ result }) => {\n        return { element: result }\n      }\n    ).pop()\n\n    const App = function App() {\n      const onClientEntryRanRef = React.useRef(false)\n\n      React.useEffect(() => {\n        if (!onClientEntryRanRef.current) {\n          onClientEntryRanRef.current = true\n          if (performance.mark) {\n            performance.mark(`onInitialClientRender`)\n          }\n\n          apiRunner(`onInitialClientRender`)\n        }\n      }, [])\n\n      return <GatsbyRoot>{SiteRoot}</GatsbyRoot>\n    }\n\n    const focusEl = document.getElementById(`gatsby-focus-wrapper`)\n\n    // Client only pages have any empty body so we just do a normal\n    // render to avoid React complaining about hydration mis-matches.\n    let defaultRenderer = render\n    if (focusEl && focusEl.children.length) {\n      defaultRenderer = hydrate\n    }\n\n    const renderer = apiRunner(\n      `replaceHydrateFunction`,\n      undefined,\n      defaultRenderer\n    )[0]\n\n    function runRender() {\n      const rootElement =\n        typeof window !== `undefined`\n          ? document.getElementById(`___gatsby`)\n          : null\n\n      renderer(<App />, rootElement)\n    }\n\n    // https://github.com/madrobby/zepto/blob/b5ed8d607f67724788ec9ff492be297f64d47dfc/src/zepto.js#L439-L450\n    // TODO remove IE 10 support\n    const doc = document\n    if (\n      doc.readyState === `complete` ||\n      (doc.readyState !== `loading` && !doc.documentElement.doScroll)\n    ) {\n      setTimeout(function () {\n        runRender()\n      }, 0)\n    } else {\n      const handler = function () {\n        doc.removeEventListener(`DOMContentLoaded`, handler, false)\n        window.removeEventListener(`load`, handler, false)\n\n        runRender()\n      }\n\n      doc.addEventListener(`DOMContentLoaded`, handler, false)\n      window.addEventListener(`load`, handler, false)\n    }\n\n    return\n  })\n})\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport loader from \"./loader\"\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.loadPageSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","const map = new WeakMap()\n\nexport function reactDOMUtils() {\n  const reactDomClient = require(`react-dom/client`)\n\n  const render = (Component, el) => {\n    let root = map.get(el)\n    if (!root) {\n      map.set(el, (root = reactDomClient.createRoot(el)))\n    }\n    root.render(Component)\n  }\n\n  const hydrate = (Component, el) => reactDomClient.hydrateRoot(el, Component)\n\n  return { render, hydrate }\n}\n","import redirects from \"./redirects.json\"\n\n// Convert to a map for faster lookup in maybeRedirect()\n\nconst redirectMap = new Map()\nconst redirectIgnoreCaseMap = new Map()\n\nredirects.forEach(redirect => {\n  if (redirect.ignoreCase) {\n    redirectIgnoreCaseMap.set(redirect.fromPath, redirect)\n  } else {\n    redirectMap.set(redirect.fromPath, redirect)\n  }\n})\n\nexport function maybeGetBrowserRedirect(pathname) {\n  let redirect = redirectMap.get(pathname)\n  if (!redirect) {\n    redirect = redirectIgnoreCaseMap.get(pathname.toLowerCase())\n  }\n  return redirect\n}\n","import { apiRunner } from \"./api-runner-browser\"\n\nif (\n  window.location.protocol !== `https:` &&\n  window.location.hostname !== `localhost`\n) {\n  console.error(\n    `Service workers can only be used over HTTPS, or on localhost for development`\n  )\n} else if (`serviceWorker` in navigator) {\n  navigator.serviceWorker\n    .register(`${__BASE_PATH__}/sw.js`)\n    .then(function (reg) {\n      reg.addEventListener(`updatefound`, () => {\n        apiRunner(`onServiceWorkerUpdateFound`, { serviceWorker: reg })\n        // The updatefound event implies that reg.installing is set; see\n        // https://w3c.github.io/ServiceWorker/#service-worker-registration-updatefound-event\n        const installingWorker = reg.installing\n        console.log(`installingWorker`, installingWorker)\n        installingWorker.addEventListener(`statechange`, () => {\n          switch (installingWorker.state) {\n            case `installed`:\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and the fresh content will\n                // have been added to the cache.\n\n                // We set a flag so Gatsby Link knows to refresh the page on next navigation attempt\n                window.___swUpdated = true\n                // We call the onServiceWorkerUpdateReady API so users can show update prompts.\n                apiRunner(`onServiceWorkerUpdateReady`, { serviceWorker: reg })\n\n                // If resources failed for the current page, reload.\n                if (window.___failedResources) {\n                  console.log(`resources failed, SW updated - reloading`)\n                  window.location.reload()\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a \"Content is cached for offline use.\" message.\n                console.log(`Content is now available offline!`)\n\n                // Post to service worker that install is complete.\n                // Delay to allow time for the event listener to be added --\n                // otherwise fetch is called too soon and resources aren't cached.\n                apiRunner(`onServiceWorkerInstalled`, { serviceWorker: reg })\n              }\n              break\n\n            case `redundant`:\n              console.error(`The installing service worker became redundant.`)\n              apiRunner(`onServiceWorkerRedundant`, { serviceWorker: reg })\n              break\n\n            case `activated`:\n              apiRunner(`onServiceWorkerActive`, { serviceWorker: reg })\n              break\n          }\n        })\n      })\n    })\n    .catch(function (e) {\n      console.error(`Error during service worker registration:`, e)\n    })\n}\n","import React from \"react\"\n\nconst SlicesResultsContext = React.createContext({})\nconst SlicesContext = React.createContext({})\nconst SlicesMapContext = React.createContext({})\nconst SlicesPropsContext = React.createContext({})\n\nexport {\n  SlicesResultsContext,\n  SlicesContext,\n  SlicesMapContext,\n  SlicesPropsContext,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { createServerOrClientContext } from \"./context-utils\"\n\nconst StaticQueryContext = createServerOrClientContext(`StaticQuery`, {})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nlet warnedAboutStaticQuery = false\n\n// TODO(v6): Remove completely\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  if (process.env.NODE_ENV === `development` && !warnedAboutStaticQuery) {\n    console.warn(\n      `The <StaticQuery /> component is deprecated and will be removed in Gatsby v6. Use useStaticQuery instead. Refer to the migration guide for more information: https://gatsby.dev/migrating-4-to-5/#staticquery--is-deprecated`\n    )\n    warnedAboutStaticQuery = true\n  }\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    // TODO(v5): Remove since we require React >= 18\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n\n  const context = React.useContext(StaticQueryContext)\n\n  // query is a stringified number like `3303882` when wrapped with graphql, If a user forgets\n  // to wrap the query in a grqphql, then casting it to a Number results in `NaN` allowing us to\n  // catch the misuse of the API and give proper direction\n  if (isNaN(Number(query))) {\n    throw new Error(`useStaticQuery was called with a string but expects to be called using \\`graphql\\`. Try this:\n\nimport { useStaticQuery, graphql } from 'gatsby';\n\nuseStaticQuery(graphql\\`${query}\\`);\n`)\n  }\n\n  if (context[query]?.data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nexport { StaticQuery, StaticQueryContext, useStaticQuery }\n","import React from \"react\"\n\n// Ensure serverContext is not created more than once as React will throw when creating it more than once\n// https://github.com/facebook/react/blob/dd2d6522754f52c70d02c51db25eb7cbd5d1c8eb/packages/react/src/ReactServerContext.js#L101\nconst createServerContext = (name, defaultValue = null) => {\n  /* eslint-disable no-undef */\n  if (!globalThis.__SERVER_CONTEXT) {\n    globalThis.__SERVER_CONTEXT = {}\n  }\n\n  if (!globalThis.__SERVER_CONTEXT[name]) {\n    globalThis.__SERVER_CONTEXT[name] = React.createServerContext(\n      name,\n      defaultValue\n    )\n  }\n\n  return globalThis.__SERVER_CONTEXT[name]\n}\n\nfunction createServerOrClientContext(name, defaultValue) {\n  if (React.createServerContext) {\n    return createServerContext(name, defaultValue)\n  }\n\n  return React.createContext(defaultValue)\n}\n\nexport { createServerOrClientContext }\n","/**\n * Remove a prefix from a string. Return the input string if the given prefix\n * isn't found.\n */\n\nexport default function stripPrefix(str, prefix = ``) {\n  if (!prefix) {\n    return str\n  }\n\n  if (str === prefix) {\n    return `/`\n  }\n\n  if (str.startsWith(`${prefix}/`)) {\n    return str.slice(prefix.length)\n  }\n\n  return str\n}\n"],"names":["exports","components","module","plugin","require","options","plugins","getResourceURLsForPathname","loadPage","loadPageSync","api","args","defaultReturn","argTransform","results","map","result","filter","length","reduce","previous","next","then","Promise","resolve","emitter","mitt","pathAndSearch","undefined","path","search","split","charAt","slice","pathCache","Map","matchPaths","trimPathname","rawPathname","newRawPathname","indexOf","qs","encodeURIComponent","pathname","decodeURIComponent","stripPrefix","__BASE_PATH__","absolutify","startsWith","URL","window","location","href","endsWith","setMatchPaths","value","findMatchPath","trimmedPathname","cleanPath","pickPaths","matchPath","originalPath","pick","normalizePagePath","route","grabMatchParams","params","findPath","has","get","redirect","maybeGetBrowserRedirect","toPath","foundPath","set","ServerSliceRenderer","sliceId","children","contents","React","id","push","ServerSlice","sliceName","allowEmpty","sliceProps","slicesMap","useContext","SlicesMapContext","slicesProps","SlicesPropsContext","concreteSliceName","Error","Object","keys","createContentDigest","getSliceId","sliceUsage","hasChildren","props","InlineSlice","slicesResultsMap","SlicesResultsContext","component","sliceContext","data","Slice","internalProps","alias","__renderedByLocation","slicesContext","SlicesContext","propErrors","validateSliceProps","SlicePropsError","renderEnvironment","additionalContextMessage","sliceRoot","name","componentPath","inBrowser","renderedByLocation","errors","entries","key","join","stack","message","stackLines","ReactDebugCurrentFrame","getCurrentStack","trim","captureStackTrace","forcedLocation","functionName","seenObjects","propPath","prefetchPathname","loader","enqueue","graphql","supportedPrefetchStrategy","feature","document","fakeLink","createElement","relList","supports","err","support","url","reject","link","setAttribute","forEach","onload","onerror","getElementsByTagName","getElementsByName","parentNode","appendChild","req","XMLHttpRequest","open","status","send","preFetched","catch","PageResourceStatus","Success","createPageDataUrl","rawPath","maybeSearch","s","shouldAbortFetch","doFetch","method","onreadystatechange","readyState","BOT_REGEX","toPageResources","pageData","head","page","componentChunkName","webpackCompilationHash","staticQueryHashes","getServerDataError","json","waitForResponse","response","readRoot","hasOwnProperty","call","setTimeout","BaseLoader","loadComponent","inFlightNetworkRequests","this","pageDb","inFlightDb","staticQueryDb","pageDataDb","partialHydrationDb","slicesDataDb","sliceInflightDb","slicesDb","isPrefetchQueueRunning","prefetchQueued","prefetchTriggered","Set","prefetchCompleted","memoizedGet","inFlightPromise","delete","setApiRunner","apiRunner","prefetchDisabled","some","a","fetchPageDataJson","loadObj","pagePath","retries","responseText","jsonPayload","JSON","parse","includes","assign","payload","notFound","internalServerError","fetchPartialHydrationJson","replace","loadPageDataJson","loadPartialHydrationJson","loadSliceDataJson","res","error","loadDataPromises","loadAppData","all","allData","appDataResponse","pageDataResponse","rscDataResponse","pageStaticQueryHashes","finalResult","dedupedSliceNames","Array","from","values","loadSlice","inFlight","m","default","slicesData","slices","dedupedStaticQueryHashes","staticQueryHash","loadChunkPromises","componentChunkPromises","sliceComponents","headComponent","pageComponent","createdAt","Date","sliceComponent","pageResources","partialHydration","readableStream","ReadableStream","start","controller","te","TextEncoder","encode","pull","close","cancel","createFromReadableStream","staticQueryBatchPromise","staticQueryResults","staticQueryResultsMap","emit","withErrorDetails","shouldPrefetch","navigator","connection","effectiveType","saveData","doesConnectionSupportPrefetch","userAgent","test","prefetch","abort","defer","promise","abortC","AbortController","signal","addEventListener","index","findIndex","p","splice","_processNextPrefetchBatch","bind","requestIdleCallback","cb","toPrefetch","prefetches","dPromise","add","doPrefetch","pageDataUrl","prefetchHelper","crossOrigin","as","hovering","createComponentUrls","isPageNotFound","appData","___chunkMapping","chunk","__PATH_PREFIX__","instance","ProdLoader","asyncRequires","chunkName","exportType","componentUrls","setLoader","_loader","publicLoader","getStaticQueryResults","getSliceResults","FireCallbackInEffect","callback","useEffect","VALID_NODE_NAMES","isEqualNode","oldTag","newTag","HTMLElement","nonce","getAttribute","cloneTag","cloneNode","getValidHeadNodesAndAttributes","rootNode","htmlAndBodyAttributes","html","body","seenIds","validHeadNodes","node","childNodes","nodeName","toLowerCase","attributes","isElementType","isValidNodeName","attribute","isStyleAttribute","style","clonedNode","massageScript","indexOfPreviouslyInsertedNode","removeChild","script","attr","innerHTML","nodeType","hiddenRoot","keysOfHtmlAndBodyAttributes","onHeadRendered","htmlElement","querySelector","attributeName","attributeValue","bodyElement","applyHtmlAndBodyAttributes","existingHeadElements","querySelectorAll","append","newHeadNodes","oldNodes","newNodes","onStale","onNew","existingHeadElement","indexInNewNodes","e","newNode","diffNodes","headHandlerForBrowser","pageComponentProps","Head","headExportValidator","render","reactDOMUtils","HeadElement","input","serverData","pageContext","WrapHeadElement","element","pop","StaticQueryContext","Provider","LocationProvider","prevHeadNodes","removePrevHeadElements","htmlAndBodyattributeList","removeAttribute","removeHtmlAndBodyAttributes","PageRenderer","__params","pageElement","propTypes","PropTypes","isRequired","RouteAnnouncerProps","position","top","width","height","padding","overflow","clip","whiteSpace","border","maybeRedirect","hash","___replace","nextRoute","event","reason","onPreRouteUpdate","prevLocation","onRouteUpdate","navigate","to","globalHistory","parsePath","___swUpdated","timeoutId","history","replaceState","clearTimeout","___webpackCompilationHash","serviceWorker","state","postMessage","gatsbyApi","reachNavigate","shouldUpdateScroll","prevRouterProps","routerProps","getSavedScrollPosition","_stateStorage","read","oldPathname","decodeURI","RouteAnnouncer","announcementRef","componentDidUpdate","prevProps","nextProps","requestAnimationFrame","pageName","title","pageHeadings","textContent","newAnnouncement","current","innerText","ref","compareLocationProps","nextLocation","RouteUpdates","componentDidMount","shouldComponentUpdate","getDerivedStateFromProps","prevState","loadResources","setState","nextState","shallowCompare","hydrate","___emitter","___loader","listen","action","___push","___navigate","reloadStorageKey","apiRunnerAsync","Boolean","RouteHandler","BaseContext","baseuri","basepath","DataContext","GatsbyRoot","Location","sliceResults","LocationHandler","Consumer","Router","encodeURI","browserLoc","match","getSessionStorage","sessionStorage","getItem","setItem","reload","removeItem","console","SiteRoot","App","onClientEntryRanRef","performance","mark","focusEl","getElementById","defaultRenderer","renderer","runRender","rootElement","doc","documentElement","doScroll","handler","removeEventListener","InternalPageRenderer","WeakMap","reactDomClient","Component","el","root","createRoot","hydrateRoot","redirectMap","redirectIgnoreCaseMap","ignoreCase","fromPath","protocol","hostname","register","reg","installingWorker","installing","log","___failedResources","defaultValue","createServerContext","globalThis","__SERVER_CONTEXT","StaticQueryDataRenderer","staticQueryData","query","finalData","StaticQuery","useStaticQuery","context","isNaN","Number","str","prefix"],"sourceRoot":""}