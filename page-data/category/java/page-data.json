{"componentChunkName":"component---src-templates-category-js","path":"/category/java/","result":{"data":{"site":{"siteMetadata":{"title":"Iol-lshh's"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"GraalVM이란? GraalVM 특징 네이티브 Java 코드 실행 GraalVM에서 Java 코드 실행 방식 GraalVM 아키텍처 AOT 컴파일 GraalVM vs JVM 1. GraalVM이란? GraalVM은 Ahead-Of-Time (AOT…","fields":{"slug":"/java/GraalVM_vs_JVM/"},"frontmatter":{"title":"GraalVM, JVM 비교","date":"January 14, 2025","description":"GraalVM, JVM 비교","category":["java"]}}},{"node":{"excerpt":"Java는 모바일 애플리케이션부터 대규모 엔터프라이즈 시스템까지 다양한 영역에서 사용되는 세계적으로 널리 쓰이는 프로그래밍 언어입니다. 그러나 Java 프로그램을 작성하고 실행하며 동작시키기 위해서는 Java 생태계의 세 가지 핵심 구성 요소인 JDK…","fields":{"slug":"/java/JVM/"},"frontmatter":{"title":"JVM","date":"January 14, 2025","description":"Java의 핵심 구성 요소: JDK, JRE, JVM","category":["java"]}}},{"node":{"excerpt":"JDBC vs JPA Spring Data JPA의 작동 방식 JPA와 ORM에 대한 베스트 프렉티스 가이드 1. JDBC vs JPA Java에서 관계형 데이터베이스를 사용할 때, JDBC(Java Database Connectivity)와 JPA…","fields":{"slug":"/java/JPA/"},"frontmatter":{"title":"JPA","date":"January 13, 2025","description":"JPA 정리","category":["java"]}}},{"node":{"excerpt":"단위 테스트\n스프링 부트 테스트","fields":{"slug":"/java/basic_java/6_테스트/"},"frontmatter":{"title":"6. 테스트","date":"January 13, 2025","description":"테스트","category":["java","basic_java"]}}},{"node":{"excerpt":"패키지 관리자 명령어 의존성 메이븐 기본적인 설정 스프링 재단","fields":{"slug":"/java/basic_java/5_Gradle/"},"frontmatter":{"title":"5. Gradle","date":"January 13, 2025","description":"Gradle","category":["java","basic_java"]}}},{"node":{"excerpt":"스프링(SPRING)은 자바(Java) 기반의 엔터프라이즈 애플리케이션 개발을 단순화하고 유연하게 만들기 위해 등장한 프레임워크입니다. 기존 JEE(J2EE)가 가진 복잡한 설정 문제를 해결하기 위해 의존성 주입(Dependency Injection…","fields":{"slug":"/java/basic_java/4_SpringBoot/"},"frontmatter":{"title":"4. SpringBoot","date":"January 07, 2025","description":"스프링 핵심 동작 원리","category":["java","basic_java"]}}},{"node":{"excerpt":"**Martin Fowler의 \"엔터프라이즈 애플리케이션 아키텍처 패턴\"**에 따르면, 소프트웨어는 계층화된 구조를 통해 복잡성을 관리합니다. 상위 계층은 하위 계층의 서비스를 활용하지만, 하위 계층은 상위 계층을 인식하지 않습니다. 3.1.…","fields":{"slug":"/java/basic_java/3_Layered_Architecture/"},"frontmatter":{"title":"3. Layered Architecture","date":"January 06, 2025","description":"엔터프라이즈 애플리케이션 아키텍처의 기본 개념","category":["java","basic_java"]}}},{"node":{"excerpt":"2.1. 타입 2.1.1. 원시 타입 (Primitive Types) **원시 타입(Primitive Types)**은 자바에서 객체가 아닌 가장 기본적인 데이터 유형입니다. 언어에 의해 미리 정의된…","fields":{"slug":"/java/basic_java/2_Java_API/"},"frontmatter":{"title":"2. Java API","date":"January 05, 2025","description":"자바 데이터 타입과 객체지향 설계 원칙","category":["java","basic_java"]}}},{"node":{"excerpt":"1.1. JDK 구성 요소 JVM (Java Virtual Machine) JRE (Java Runtime Environment) JDK (Java Development Kit) 1.1.1. JVM (Java Virtual Machine) Java…","fields":{"slug":"/java/basic_java/1_Java_환경/"},"frontmatter":{"title":"1. Java 환경","date":"January 04, 2025","description":"JVM","category":["java","basic_java"]}}},{"node":{"excerpt":"Java_환경 Java_API Layered_Architecture SpringBoot Gradle 테스트 자바 - 핵심 동작 개념 jvm, class, gc, main 함수 jvm 빌드, 컴파일 런타임, gc…","fields":{"slug":"/java/basic_java/0_목차/"},"frontmatter":{"title":"0. 목차","date":"January 03, 2025","description":"목차","category":["java","basic_java"]}}},{"node":{"excerpt":"Java 문법 0. Java 기초 0.1 OOP 특징 0.2 OOP 설계 5원칙 SOLID 0.3 타입 0.3.1 Call by Value 0.3.2 Call by Reference 0.3.3 String 0.3.4 연산된 값 0.4 접근자 0.…","fields":{"slug":"/java/Java_문법/"},"frontmatter":{"title":"Java 문법","date":"December 30, 2023","description":"Java 문법 정리","category":["java"]}}}]}},"pageContext":{"category":"java"}},"staticQueryHashes":["1408108323","1569336894","3764592887","62622001"],"slicesMap":{}}