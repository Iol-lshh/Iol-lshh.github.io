{"version":3,"file":"component---src-pages-index-js-1af761fa40c21e263f56.js","mappings":"0RAMA,MASMA,EAA8B,CAClCC,QAAS,OACTC,cAAe,MACfC,WAAY,SACZC,SAAU,QACVC,OAAQ,OACRC,MAAO,QAGT,MAlBoC,IAEhC,uBAAKC,MAAOP,GACV,gBAAC,IAAiB,CAACO,MAAOC,EAAAA,IAC1B,gBAAC,IAAoB,CAACD,MAAOC,EAAAA,KCmFnC,MApFkB,IAAwB,UAAvB,KAAEC,EAAI,SAAEC,GAAU,EACnC,MAAMC,GAAkC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,QAAU,GAC9CC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,gBAAC,IAAM,CAACR,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,MACJ,yBAAG,yBAQP,gBAAC,IAAM,CAACD,SAAUA,EAAUI,MAAOH,GACjC,gBAAC,IAAG,MACJ,sBAAIJ,MAAO,CAAEY,UAAY,SACtBJ,EAAMK,KAAIC,IACT,MAAMP,EAAQO,EAAKC,YAAYR,OAASO,EAAKE,OAAOC,KAC9CC,EAAWJ,EAAKC,YAAYG,UAAa,GAE/C,OACE,sBAAIC,IAAKL,EAAKE,OAAOC,MACnB,2BACEG,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,6BAAQJ,GACR,0BACE,gBAAC,EAAAK,KAAI,CAACC,GAAIV,EAAKE,OAAOC,KAAMQ,SAAS,OACnC,wBAAMA,SAAS,YAAYlB,KAG/B,6BAAQO,EAAKC,YAAYW,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQd,EAAKC,YAAYc,aAAef,EAAKgB,SAE/CL,SAAS,kBAIZ,KAIX,gBAAC,EAAqB,MACf,EAsCN,MAAMM,EAAO,IAAM,gBAAC,IAAG,CAACxB,MAAM,a","sources":["webpack://gatsby-starter-blog/./src/components/button/scroll/updownScrollButtonContainer.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["import React from 'react';\nimport scrollButtonStyle from './scrollButtonStyle';\nimport ScrollToTopButton from './scrollToTopButton';\nimport ScrollToBottomButton from './scrollToBottomButton';\n\n\nconst UpdownScrollButtonContainer = () => {\n  return (\n    <div style={scrollButtonsContainerStyle}>\n      <ScrollToTopButton style={scrollButtonStyle} />\n      <ScrollToBottomButton style={scrollButtonStyle} />\n    </div>\n  );\n};\n\nconst scrollButtonsContainerStyle = {\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  position: 'fixed',\n  bottom: '20px',\n  right: '20px',\n};\n\nexport default UpdownScrollButtonContainer;\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport ScrollButtonContainer from \"../components/button/scroll/updownScrollButtonContainer\"\nimport PropTypes from \"prop-types\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || ``\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found.\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          const category = post.frontmatter.category || ``\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <small>{category}</small>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n      <ScrollButtonContainer />\n    </Layout>\n  )\n}\n\nBlogIndex.propTypes = {\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string,\n      }),\n    }),\n    allMarkdownRemark: PropTypes.shape({\n      nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n          excerpt: PropTypes.string,\n          fields: PropTypes.shape({\n            slug: PropTypes.string,\n          }),\n          frontmatter: PropTypes.shape({\n            date: PropTypes.string,\n            title: PropTypes.string,\n            category: PropTypes.string,\n            description: PropTypes.string,\n          }),\n        })\n      ),\n    }),\n  }).isRequired,\n  location: PropTypes.object.isRequired,\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          category\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["scrollButtonsContainerStyle","display","flexDirection","alignItems","position","bottom","right","style","scrollButtonStyle","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","listStyle","map","post","frontmatter","fields","slug","category","key","className","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","Head"],"sourceRoot":""}