{"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"a572b5b0-0b63-5f45-adf5-d30d30a560a6","frontmatter":{"title":"EAA 정리와 회고","date":"February 26, 2025","category":["회고","book","pattern"],"description":"마틴 파울러의 엔터프라이즈 애플리케이션 아키텍처 패턴을 읽은 뒤의 정리와 회고"},"fields":{"slug":"/회고/EAA/EAA_정리와_회고/"},"excerpt":"애플리케이션 아키텍처는 회사마다 세부적으로는 다르지만, 비슷한 양상을 띈다. 프레젠테이션 계층 비즈니스 로직 계층 데이터 액세스 계층 마틴 파울러는 엔터프라이즈 애플리케이션 아키텍처 패턴(Enterprise Application Architecture…"}},{"node":{"id":"c5e338fe-4908-5b15-95ef-f4ca98d8f61f","frontmatter":{"title":"\"토스 서버개발자가 들려주는 시니어의 성장\" 회고","date":"February 25, 2025","category":["회고"],"description":"세 시니어 토스 서버개발자의 이야기를 듣고, 시니어 개발자로 성장하기 위해 필요한 역량과 고민을 정리"},"fields":{"slug":"/회고/토스_20250224_세션/"},"excerpt":"최근 경력이 쌓여가며, 고민에 빠졌다. 최근, 나는 주니어에서 벗어나 미들로 성장해야 하는 시기에 접어들었다. 하지만, 어떤 역할을 해야 할지, 무엇을 준비해야 할지 혼란스러웠다. 중간에 차세대 PI(Process Innovation…"}},{"node":{"id":"1017a8a1-e542-5413-b45b-55cb2b6ec19c","frontmatter":{"title":"DDD 정리와 회고","date":"February 23, 2025","category":["회고","book","pattern"],"description":"조영호님의 강의 DDD의 사실과 오해를 듣고, DDD에 대한 요약 정리"},"fields":{"slug":"/회고/ddd/DDD_정리와_회고/"},"excerpt":"도메인: 사용자가 프로그램을 사용하는 주제 영역. 소프트웨어의 본질은, 사용자를 위해 도메인에 관련된 문제를 해결하는 능력에 있다. 2025년 2월 16일과 23일, 이틀에 걸쳐 조영호님의 ‘DDD의 사실과 오해’ 강의를 들었다. DDD…"}},{"node":{"id":"e0491b20-e40e-5eaa-8fc7-247d66118117","frontmatter":{"title":"Agile 정리와 회고","date":"February 15, 2025","category":["회고","book","agile"],"description":"Agile 경험 회고 및 구성하는 요소들 정리 - Scrum, XP, Lean, Kanban"},"fields":{"slug":"/회고/agile/Agile_회고/"},"excerpt":"나는 단 3주 만에 3년 치의 경험을 했다. 애자일은 단순한 개발 프로세스가 아니라, 개발 방식과 협업 문화를 혁신하는 철학이자 실천 방식이었다. 나는 2024년 12월 30일부터 2025년 1월 1…"}},{"node":{"id":"3818a1af-bf6c-59e6-b66b-fa532034dd50","frontmatter":{"title":"Lock 없이 동시성을 보장하는 송금 시스템 설계","date":"February 12, 2025","category":["java","pattern"],"description":"lock 없이 threadsafe한 시스템 만들기"},"fields":{"slug":"/pattern/nolock/no_lock/"},"excerpt":"송금 시스템은 뭘까? 여러 사용자가 하나의 계좌에 입출금하는 것이 결국 송금 시스템이라고 볼 수 있지 않을까? 입금: DB에 금액을 조회하고, 조회된 금액을 더하고, DB에 저장한다. 출금: DB…"}},{"node":{"id":"6764b00a-162c-5425-9bbe-ac8b554d7cc0","frontmatter":{"title":"Agile - Scrum","date":"February 11, 2025","category":["book","agile"],"description":"Agile과 스크럼에 대하여"},"fields":{"slug":"/회고/agile/Agile_Scrum/"},"excerpt":"마음가짐과 경험이 중요하다! 애자일 소프트웨어 개발 선언 https://agilemanifesto.org/iso/ko/manifesto.html  애자일 선언 이면의 원칙  반복(iteration…"}},{"node":{"id":"cefcb283-9a8d-5560-98a2-63d922e4bff0","frontmatter":{"title":"Fine Engineer가 되기 위한 조건: 신념, 철학, 패러다임","date":"February 08, 2025","category":["회고","book"],"description":"과학혁명의 구조를 읽고..."},"fields":{"slug":"/회고/Fine_Engineer의_조건-신념_철학_패러다임/"},"excerpt":"나는 fine한 엔지니어가 되길 희망한다. 무엇이 fine…"}},{"node":{"id":"c6b5a64f-856e-5839-ad86-3b2f287690eb","frontmatter":{"title":"애플리케이션의 CQRS","date":"January 28, 2025","category":["pattern"],"description":"애플리케이션의 CQRS 유스케이스 정리"},"fields":{"slug":"/pattern/애플리케이션의_CQRS/"},"excerpt":"Milan Jovanovic…"}},{"node":{"id":"9222173d-92e7-556b-8adb-11ce1c0ab35e","frontmatter":{"title":"API 베스트 프렉티스","date":"January 27, 2025","category":["pattern"],"description":"경험 많은 개발자가 숙지해야 할 10가지 REST API 핵심 개념"},"fields":{"slug":"/pattern/API_베스트_프렉티스/"},"excerpt":"Nina Fernanda Duran님의 링크드인 게시글을 참조했습니다.…"}},{"node":{"id":"6c6b226a-3266-5990-9062-1deed9b33bfc","frontmatter":{"title":"데이터 캐싱","date":"January 16, 2025","category":["pattern"],"description":"데이터는 어디서나 캐싱된다 - 프론트엔드부터 백엔드까지!"},"fields":{"slug":"/pattern/데이터_캐싱/"},"excerpt":"ByteByteGo의 링크드인 게시글을 참조했습니다. 이 다이어그램은 일반적인 아키텍처에서 데이터가 캐싱되는 위치를 설명합니다. 데이터는 여러 계층에 걸쳐 캐싱됩니다.  1. 클라이언트 애플리케이션 HTTP…"}},{"node":{"id":"cc58c280-044b-5655-a4e5-a886ef5bacad","frontmatter":{"title":"GraalVM, JVM 비교","date":"January 14, 2025","category":["java"],"description":"GraalVM, JVM 비교"},"fields":{"slug":"/java/GraalVM_vs_JVM/"},"excerpt":"GraalVM이란? GraalVM 특징 네이티브 Java 코드 실행 GraalVM에서 Java 코드 실행 방식 GraalVM 아키텍처 AOT 컴파일 GraalVM vs JVM 1. GraalVM이란? GraalVM은 Ahead-Of-Time (AOT…"}},{"node":{"id":"e99784b7-10c5-5a65-8053-261e07be1d73","frontmatter":{"title":"JVM","date":"January 14, 2025","category":["java"],"description":"Java의 핵심 구성 요소: JDK, JRE, JVM"},"fields":{"slug":"/java/JVM/"},"excerpt":"Java는 모바일 애플리케이션부터 대규모 엔터프라이즈 시스템까지 다양한 영역에서 사용되는 세계적으로 널리 쓰이는 프로그래밍 언어입니다. 그러나 Java 프로그램을 작성하고 실행하며 동작시키기 위해서는 Java 생태계의 세 가지 핵심 구성 요소인 JDK…"}},{"node":{"id":"6b6bfce6-a1e4-5cca-8291-44c193f448a1","frontmatter":{"title":"clean test suite","date":"January 13, 2025","category":["pattern"],"description":"test"},"fields":{"slug":"/pattern/clean_test_suite/"},"excerpt":"Daniel Moka님의 링크드인 게시글을 참조했습니다. 클린 코드 팁: 깨끗한 테스트 없이는 깨끗한 코드를 가질 수 없다\n테스트는 코드 품질의 핵심입니다. 깨끗한 테스트는 다음과 같은 특징을 가져야 합니다  깨끗한 테스트의 특징 단순함 (Simple…"}},{"node":{"id":"d0846c60-d062-543b-986f-275de9cf7d9a","frontmatter":{"title":"JPA","date":"January 13, 2025","category":["java"],"description":"JPA 정리"},"fields":{"slug":"/java/JPA/"},"excerpt":"JDBC vs JPA Spring Data JPA의 작동 방식 JPA와 ORM에 대한 베스트 프렉티스 가이드 1. JDBC vs JPA Java에서 관계형 데이터베이스를 사용할 때, JDBC(Java Database Connectivity)와 JPA…"}},{"node":{"id":"7f523082-213d-5f15-9ee1-3e86465b9e99","frontmatter":{"title":"4. SpringBoot","date":"January 07, 2025","category":["java","basic_java"],"description":"스프링 핵심 동작 원리"},"fields":{"slug":"/java/basic_java/4_SpringBoot/"},"excerpt":"스프링(SPRING)은 자바(Java) 기반의 엔터프라이즈 애플리케이션 개발을 단순화하고 유연하게 만들기 위해 등장한 프레임워크입니다. 기존 JEE(J2EE)가 가진 복잡한 설정 문제를 해결하기 위해 의존성 주입(Dependency Injection…"}},{"node":{"id":"938acc0f-f9fa-5d18-adda-d0f7a80d7d08","frontmatter":{"title":"3. Layered Architecture","date":"January 06, 2025","category":["java","basic_java"],"description":"엔터프라이즈 애플리케이션 아키텍처의 기본 개념"},"fields":{"slug":"/java/basic_java/3_Layered_Architecture/"},"excerpt":"**Martin Fowler의 \"엔터프라이즈 애플리케이션 아키텍처 패턴\"**에 따르면, 소프트웨어는 계층화된 구조를 통해 복잡성을 관리합니다. 상위 계층은 하위 계층의 서비스를 활용하지만, 하위 계층은 상위 계층을 인식하지 않습니다. 3.1.…"}},{"node":{"id":"f5fbefc6-f707-59af-bdda-68574595f9cd","frontmatter":{"title":"2. Java","date":"January 05, 2025","category":["java","basic_java"],"description":"자바 데이터 타입과 객체지향 설계 원칙"},"fields":{"slug":"/java/basic_java/2_Java/"},"excerpt":"2.1. 타입 2.1.1. 원시 타입 (Primitive Types) **원시 타입(Primitive Types)**은 자바에서 객체가 아닌 가장 기본적인 데이터 유형입니다. 언어에 의해 미리 정의된…"}},{"node":{"id":"6c3434f4-acf9-5416-a09e-664e0e07df9c","frontmatter":{"title":"1. Java 환경","date":"January 04, 2025","category":["java","basic_java"],"description":"JVM"},"fields":{"slug":"/java/basic_java/1_Java_환경/"},"excerpt":"1.1. JDK 구성 요소 JVM (Java Virtual Machine) JRE (Java Runtime Environment) JDK (Java Development Kit) 1.1.1. JVM (Java Virtual Machine) Java…"}},{"node":{"id":"1f344bcc-9864-597a-b320-9c44aa476320","frontmatter":{"title":"0. 목차","date":"January 03, 2025","category":["java","basic_java"],"description":"목차"},"fields":{"slug":"/java/basic_java/0_목차/"},"excerpt":"Java_환경 Java_API Layered_Architecture SpringBoot Gradle 테스트 자바 - 핵심 동작 개념 jvm, class, gc, main 함수 jvm 빌드, 컴파일 런타임, gc…"}},{"node":{"id":"196040cd-9e96-5543-96e4-376affb40a6c","frontmatter":{"title":"Java 문법","date":"December 30, 2023","category":["java"],"description":"Java 문법 정리"},"fields":{"slug":"/java/Java_문법/"},"excerpt":"Java 문법 0. Java 기초 0.1 OOP 특징 0.2 OOP 설계 5원칙 SOLID 0.3 타입 0.3.1 Call by Value 0.3.2 Call by Reference 0.3.3 String 0.3.4 연산된 값 0.4 접근자 0.…"}},{"node":{"id":"05b814f4-9a2e-5f7e-979f-c387b10cd180","frontmatter":{"title":"what's MSA","date":"December 20, 2023","category":["pattern","microservices_pattern"],"description":"MSA가 무엇인지 맛보기 정리"},"fields":{"slug":"/pattern/whats_msa/"},"excerpt":"목차 참조 MSA란? Service란? 프런트엔드와 백엔드 다시, MSA란? MSA 고려 포인트 연결 동기 통신 Service Registry Service Discovery…"}},{"node":{"id":"05e4e0fa-1a96-55ba-8497-8ab1abb12184","frontmatter":{"title":"JavaScript 문법","date":"March 02, 2023","category":["javascript"],"description":"JavaScript 문법 정리"},"fields":{"slug":"/javascript/Javascript_문법/"},"excerpt":"1. 변수 1.1 const와 let 1.1.1 const 1.1.2 let 1.2 호이스팅 2. 불변성 2.1 배열 2.1.1 filter 2.1.2 map 2.1.3 reduce 2.1.4 전개연산자 (...) 3. Null 유효성 관리 3.…"}}]}}}