{"componentChunkName":"component---src-templates-blog-post-js","path":"/java/basic_java/0_목차/","result":{"data":{"site":{"siteMetadata":{"title":"Iol-lshh's 상념 공간"}},"markdownRemark":{"id":"b099e9e3-05e5-5f55-ab81-a49039f7b234","excerpt":"Java 환경 Java API Layered Architecture SpringBoot Gradle 테스트 자바 - 핵심 동작 개념 jvm, class, gc, main 함수 jvm 빌드, 컴파일 런타임, gc, 쓰레드 자바 - 클래스와 객체 , 메서드 시그니처 클래스와 객체 oop…","html":"<ol>\n<li>Java 환경</li>\n<li>Java API</li>\n<li>Layered Architecture</li>\n<li>SpringBoot</li>\n<li>Gradle</li>\n<li>테스트</li>\n</ol>\n<hr>\n<ol>\n<li>자바 - 핵심 동작 개념 jvm, class, gc, main 함수\n<ol>\n<li>jvm</li>\n<li>빌드, 컴파일</li>\n<li>런타임, gc, 쓰레드</li>\n</ol>\n</li>\n<li>자바 - 클래스와 객체 , 메서드 시그니처\n<ol>\n<li>클래스와 객체\n<ol>\n<li>oop 특징\n<ol>\n<li>추상화(Abstraction), 상속(Inheritance), 다형성(Polymorphism), 캡슐화 (Encapsulation)</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>메서드 시그니처</li>\n<li>원시 타입, 참조 타입, 불변</li>\n</ol>\n</li>\n<li>스프링 부트 - 애플리케이션 레이어드 패턴\n<ol>\n<li>presentation, domain,\bdata access</li>\n</ol>\n</li>\n<li>스프링 부트 - 핵심 동작 개념 IoC, 빈, di\n<ol>\n<li>ApplicationContext SpringContatiner - Dependency Injection</li>\n<li>Bean - Singleton POJO</li>\n</ol>\n</li>\n<li>스프링 부트 - 그래들과 설정 (+ jdbc, jpa)\n<ol>\n<li>그래들\n<ol>\n<li>동작 방식, 명령어</li>\n<li>의존성, 메이븐</li>\n</ol>\n</li>\n<li>application.yaml</li>\n</ol>\n</li>\n<li>스프링 부트 - 테스트, 스프링 생태계\n<ol>\n<li>단위 테스트</li>\n<li>스프링 부트 테스트</li>\n<li>기타 생태계</li>\n</ol>\n</li>\n</ol>\n<p><img src=\"./img/IMG_1261.gif\" alt=\"목차\"></p>","frontmatter":{"title":"0. 목차","date":"January 03, 2025","category":"java > basic java","description":"목차"}},"previous":{"fields":{"slug":"/java/Java_문법/"},"frontmatter":{"title":"Java 문법"}},"next":{"fields":{"slug":"/java/basic_java/1_Java_환경/"},"frontmatter":{"title":"1. Java 환경"}}},"pageContext":{"id":"b099e9e3-05e5-5f55-ab81-a49039f7b234","previousPostId":"2003116d-c600-52c2-9112-c3b145349d11","nextPostId":"2c1da5d2-3643-591c-92e9-36ad23ec813c"}},"staticQueryHashes":["2262588459","576393222"],"slicesMap":{}}