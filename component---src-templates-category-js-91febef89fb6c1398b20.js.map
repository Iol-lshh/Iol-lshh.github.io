{"version":3,"file":"component---src-templates-category-js-91febef89fb6c1398b20.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/article/articleList.js","webpack://gatsby-starter-blog/./src/components/button/scroll/scrollButtonStyle.js","webpack://gatsby-starter-blog/./src/components/button/scroll/scrollToBottomButton.js","webpack://gatsby-starter-blog/./src/components/button/scroll/scrollToTopButton.js","webpack://gatsby-starter-blog/./src/components/button/scroll/updownScrollButtonContainer.js","webpack://gatsby-starter-blog/./src/components/search/search.js","webpack://gatsby-starter-blog/./src/templates/category.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nconst ArticleList = ({ posts }) => {\n  return (\n    <ol style={{ listStyle: `none` }}>\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug\n        const postCategory = node.frontmatter.category || []\n\n        return (\n          <li key={node.fields.slug}>\n            <article\n              className=\"post-list-item\"\n              itemScope\n              itemType=\"http://schema.org/Article\"\n            >\n              <header>\n                <small>{postCategory.join(', ')}</small>\n                <h2>\n                  <Link to={node.fields.slug} itemProp=\"url\">\n                    <span itemProp=\"headline\">{title}</span>\n                  </Link>\n                </h2>\n                <small>{node.frontmatter.date}</small>\n              </header>\n              <section>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: node.frontmatter.description || node.excerpt,\n                  }}\n                  itemProp=\"description\"\n                />\n              </section>\n            </article>\n          </li>\n        )\n      })}\n    </ol>\n  )\n}\n\nArticleList.propTypes = {\n  posts: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        excerpt: PropTypes.string,\n        fields: PropTypes.shape({\n          slug: PropTypes.string,\n        }),\n        frontmatter: PropTypes.shape({\n          date: PropTypes.string,\n          title: PropTypes.string,\n          category: PropTypes.arrayOf(PropTypes.string),\n          description: PropTypes.string,\n        }),\n      }),\n    })\n  ).isRequired,\n}\n\nexport default ArticleList","const scrollButtonStyle = {\n  height: '40px',\n  padding: '10px 20px',\n  fontSize: '16px',\n  backgroundColor: '#cccccc',\n  color: '#fff',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  textAlign: 'center',\n  textDecoration: 'none',\n};\n\nexport default scrollButtonStyle;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport defaultScrollButtonStyle from './scrollButtonStyle';\n\nconst ScrollToBottomButton = ({ style }) => {\n  const [showButton, setShowButton] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY < document.documentElement.scrollHeight - window.innerHeight - 300) {\n        setShowButton(true);\n      } else {\n        setShowButton(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToBottom = () => {\n    window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\n  };\n\n  return (\n    showButton && (\n        <button onClick={scrollToBottom} style={style}>\n            ↓\n        </button>\n    )\n  );\n};\n\nScrollToBottomButton.propTypes = {\n  style: PropTypes.object,\n};\n\nScrollToBottomButton.defaultProps = {\n  style: defaultScrollButtonStyle,\n};\n\nexport default ScrollToBottomButton;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport defaultScrollButtonStyle from './scrollButtonStyle';\n\n\nconst ScrollToTopButton = ({style}) => {\n  const [showButton, setShowButton] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY > 300) {\n        setShowButton(true);\n      } else {\n        setShowButton(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    showButton && (\n        <button onClick={scrollToTop} style={style}>\n            ↑\n        </button>\n    )\n  );\n};\n\nScrollToTopButton.propTypes = {\n  style: PropTypes.object,\n};\n\nScrollToTopButton.defaultProps = {\n  style: defaultScrollButtonStyle,\n};\n\nexport default ScrollToTopButton;\n","import React from 'react';\nimport scrollButtonStyle from './scrollButtonStyle';\nimport ScrollToTopButton from './scrollToTopButton';\nimport ScrollToBottomButton from './scrollToBottomButton';\n\n\nconst UpdownScrollButtonContainer = () => {\n  return (\n    <div style={scrollButtonsContainerStyle}>\n      <ScrollToTopButton style={scrollButtonStyle} />\n      <ScrollToBottomButton style={scrollButtonStyle} />\n    </div>\n  );\n};\n\nconst scrollButtonsContainerStyle = {\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  position: 'fixed',\n  bottom: '20px',\n  right: '20px',\n};\n\nexport default UpdownScrollButtonContainer;\n","import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport \"./search.css\"; // search.css 파일 임포트\n\nconst Search = ({ onSearch, category }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              date(formatString: \"MMMM DD, YYYY\")\n              category\n              description\n            }\n            fields {\n              slug\n            }\n            excerpt\n          }\n        }\n      }\n    }\n  `);\n\n  const [query, setQuery] = useState(\"\");\n  const posts = data.allMarkdownRemark.edges;\n\n  const handleSearch = () => {\n    const filteredPosts = posts.filter(({ node }) => {\n      const matchesTitle = node.frontmatter.title.toLowerCase().includes(query.toLowerCase());\n      const matchesCategory = category ? node.frontmatter.category.includes(category) : true;\n      return matchesTitle && matchesCategory;\n    });\n    onSearch(filteredPosts);\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  return (\n    <div className=\"search-container\">\n      <input\n        type=\"text\"\n        placeholder=\"검색어를 입력하세요...\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n        onKeyDown={handleKeyPress} // 엔터 키 이벤트 핸들러 추가\n      />\n      <button onClick={handleSearch}>검색</button>\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n  category: PropTypes.string,\n};\n\nexport default Search;","import React, { useState } from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/layout/layout'\nimport Seo from '../components/seo'\nimport ScrollButtonContainer from \"../components/button/scroll/updownScrollButtonContainer\"\nimport ArticleList from \"../components/article/articleList\"\nimport Search from \"../components/search/search\"\nimport PropTypes from 'prop-types'\n\nconst CategoryTemplate = ({ data, pageContext, location }) => {\n  const { category } = pageContext\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n  const [filteredPosts, setFilteredPosts] = useState(posts)\n\n  const handleSearch = (filtered) => {\n    setFilteredPosts(filtered)\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title={`Posts in category \"${category}\"`} />\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n        <Link to={`/categories/${category}/`}>{category}</Link>\n        <Search onSearch={handleSearch} category={category} />\n      </div>\n      <ArticleList posts={filteredPosts} />\n      <ScrollButtonContainer />\n    </Layout>\n  )\n}\n\nCategoryTemplate.propTypes = {\n  data: PropTypes.shape({\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string,\n      }),\n    }),\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            excerpt: PropTypes.string,\n            fields: PropTypes.shape({\n              slug: PropTypes.string,\n            }),\n            frontmatter: PropTypes.shape({\n              date: PropTypes.string,\n              title: PropTypes.string,\n              category: PropTypes.arrayOf(PropTypes.string),\n              description: PropTypes.string,\n            }),\n          }),\n        })\n      ),\n    }),\n  }).isRequired,\n  pageContext: PropTypes.shape({\n    category: PropTypes.string.isRequired,\n  }).isRequired,\n  location: PropTypes.object.isRequired,\n}\n\nexport default CategoryTemplate\n\nexport const pageQuery = graphql`\n  query($category: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { category: { in: [$category] } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n            category\n          }\n        }\n      }\n    }\n  }\n`"],"names":["posts","style","listStyle","map","node","title","frontmatter","fields","slug","postCategory","category","key","className","itemScope","itemType","join","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","height","padding","fontSize","backgroundColor","color","border","borderRadius","cursor","textAlign","textDecoration","ScrollToBottomButton","showButton","setShowButton","useState","useEffect","handleScroll","window","scrollY","document","documentElement","scrollHeight","innerHeight","addEventListener","removeEventListener","onClick","scrollTo","top","behavior","defaultProps","defaultScrollButtonStyle","ScrollToTopButton","scrollButtonsContainerStyle","display","flexDirection","alignItems","position","bottom","right","scrollButtonStyle","onSearch","data","useStaticQuery","query","setQuery","allMarkdownRemark","edges","handleSearch","filteredPosts","filter","matchesTitle","toLowerCase","includes","matchesCategory","type","placeholder","value","onChange","e","target","onKeyDown","event","pageContext","location","siteTitle","site","siteMetadata","setFilteredPosts","justifyContent","filtered"],"sourceRoot":""}