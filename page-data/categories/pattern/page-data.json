{"componentChunkName":"component---src-templates-category-js","path":"/categories/pattern/","result":{"data":{"site":{"siteMetadata":{"title":"Iol-lshh's"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"클린 아키텍처. 개발자가 된 초창기에 난 이 책을 읽고 온전히 이해하지 못했다. 아직도 많이 부족하지만, 다양한 경험을 겪고, 많은 책들을 읽고, 공부했다. 애자일과 Extreme Programming…","fields":{"slug":"/회고/clean_architecture/clean_architecture_정리/"},"frontmatter":{"title":"Clean Architecture 정리","date":"March 23, 2025","description":"클린 아키텍처 정리와 의존성에 대한 고찰","category":["회고","book","pattern"]}}},{"node":{"excerpt":"…","fields":{"slug":"/회고/test/테스트_정리/"},"frontmatter":{"title":"테스트 정리","date":"March 16, 2025","description":"단위 테스트로 생산성을 올리고, 문서화 테스트를 통해 도메인 모델을 설명하기","category":["회고","book","pattern","test"]}}},{"node":{"excerpt":"근래 드는 생각이, 나는 좋은 코드, 깔끔한 코드가 무엇인지 모르겠다... 최근 엔터프라이즈 애플리케이션 아키텍처 패턴(Fowler, 2002)도 읽어보고 DDD와 XP 도 열심히 찾아봤다. 그러면서 느낀 점이 있었다. 좋은 코드를 향한 여정 P of…","fields":{"slug":"/회고/refactoring_legacy/LegacyCode_Refactoring_정리와_회고/"},"frontmatter":{"title":"Legacy Code와 Refactoring의 정리와 회고","date":"March 07, 2025","description":"'레거시 코드 활용 전략'과 'Refactoring'을 읽고","category":["회고","book","pattern"]}}},{"node":{"excerpt":"애플리케이션 아키텍처는 회사마다 세부적으로는 다르지만, 비슷한 양상을 띈다. 프레젠테이션 계층 비즈니스 로직 계층 데이터 액세스 계층 마틴 파울러는 엔터프라이즈 애플리케이션 아키텍처 패턴(Patterns of Enterprise Application…","fields":{"slug":"/회고/EAA/EAA_정리/"},"frontmatter":{"title":"EAA 정리","date":"February 27, 2025","description":"마틴 파울러의 엔터프라이즈 애플리케이션 아키텍처 패턴을 읽은 뒤의 정리","category":["회고","book","pattern"]}}},{"node":{"excerpt":"도메인: 사용자가 프로그램을 사용하는 주제 영역. 소프트웨어의 본질은, 사용자를 위해 도메인에 관련된 문제를 해결하는 능력에 있다. 2025년 2월 16일과 23일, 이틀에 걸쳐 조영호님의 ‘DDD의 사실과 오해’ 강의를 들었다. DDD…","fields":{"slug":"/회고/ddd/DDD_정리/"},"frontmatter":{"title":"DDD 정리","date":"February 23, 2025","description":"조영호님의 강의 DDD의 사실과 오해를 듣고, DDD에 대한 요약 정리","category":["회고","book","pattern","조영호님_강의"]}}},{"node":{"excerpt":"송금 시스템은 뭘까? 여러 사용자가 하나의 계좌에 입출금하는 것이 결국 송금 시스템이라고 볼 수 있지 않을까? 입금: DB에 금액을 조회하고, 조회된 금액을 더하고, DB에 저장한다. 출금: DB…","fields":{"slug":"/pattern/nolock/no_lock/"},"frontmatter":{"title":"Lock 없이 동시성을 보장하는 송금 시스템 설계","date":"February 12, 2025","description":"lock 없이 threadsafe한 시스템 만들기","category":["java","pattern"]}}},{"node":{"excerpt":"Milan Jovanovic…","fields":{"slug":"/pattern/애플리케이션의_CQRS/"},"frontmatter":{"title":"애플리케이션의 CQRS","date":"January 28, 2025","description":"애플리케이션의 CQRS 유스케이스 정리","category":["pattern"]}}},{"node":{"excerpt":"Nina Fernanda Duran님의 링크드인 게시글을 참조했습니다.…","fields":{"slug":"/pattern/API_베스트_프렉티스/"},"frontmatter":{"title":"API 베스트 프렉티스","date":"January 27, 2025","description":"경험 많은 개발자가 숙지해야 할 10가지 REST API 핵심 개념","category":["pattern"]}}},{"node":{"excerpt":"ByteByteGo의 링크드인 게시글을 참조했습니다. 이 다이어그램은 일반적인 아키텍처에서 데이터가 캐싱되는 위치를 설명합니다. 데이터는 여러 계층에 걸쳐 캐싱됩니다.  1. 클라이언트 애플리케이션 HTTP…","fields":{"slug":"/pattern/데이터_캐싱/"},"frontmatter":{"title":"데이터 캐싱","date":"January 16, 2025","description":"데이터는 어디서나 캐싱된다 - 프론트엔드부터 백엔드까지!","category":["pattern"]}}},{"node":{"excerpt":"Daniel Moka님의 링크드인 게시글을 참조했습니다. 클린 코드 팁: 깨끗한 테스트 없이는 깨끗한 코드를 가질 수 없다\n테스트는 코드 품질의 핵심입니다. 깨끗한 테스트는 다음과 같은 특징을 가져야 합니다  깨끗한 테스트의 특징 단순함 (Simple…","fields":{"slug":"/pattern/clean_test_suite/"},"frontmatter":{"title":"clean test suite","date":"January 13, 2025","description":"test","category":["pattern"]}}},{"node":{"excerpt":"목차 참조 MSA란? Service란? 프런트엔드와 백엔드 다시, MSA란? MSA 고려 포인트 연결 동기 통신 Service Registry Service Discovery…","fields":{"slug":"/pattern/whats_msa/"},"frontmatter":{"title":"what's MSA","date":"December 20, 2023","description":"MSA가 무엇인지 맛보기 정리","category":["pattern","microservices_pattern"]}}}]}},"pageContext":{"category":"pattern"}},"staticQueryHashes":["1408108323","1569336894","3764592887","62622001"],"slicesMap":{}}