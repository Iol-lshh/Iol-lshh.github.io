{"componentChunkName":"component---src-templates-category-js","path":"/categories/pattern/","result":{"data":{"site":{"siteMetadata":{"title":"Iol-lshh's"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"유스 케이스는 애플리케이션의 기능을 나타냅니다: 현재 사용자 정보 가져오기 쇼핑 카트에 아이템 추가하기 주문 결제 환불하기 저는 하나의 유스 케이스(기능)를 중심으로 코드를 구조화합니다. CQRS와 함께하는 유스 케이스 Command…","fields":{"slug":"/pattern/애플리케이션의_CQRS/"},"frontmatter":{"title":"애플리케이션의 CQRS","date":"January 28, 2025","description":"애플리케이션의 CQRS 유스케이스 정리","category":["pattern"]}}},{"node":{"excerpt":"1. 리소스 상태 전이 메커니즘 진정한 무상태성은 각 요청이 완전한 컨텍스트를 포함해야 함. 서버는 요청 간 클라이언트 세션 상태를 유지하지 않음. 리소스 상태 전이가 애플리케이션 흐름을 주도함. 2. 하이퍼미디어 제어 (HATEOAS…","fields":{"slug":"/pattern/API_베스트_프렉티스/"},"frontmatter":{"title":"API 베스트 프렉티스","date":"January 27, 2025","description":"경험 많은 개발자가 숙지해야 할 10가지 REST API 핵심 개념","category":["pattern"]}}},{"node":{"excerpt":"이 다이어그램은 일반적인 아키텍처에서 데이터가 캐싱되는 위치를 설명합니다. 데이터는 여러 계층에 걸쳐 캐싱됩니다.  1. 클라이언트 애플리케이션 HTTP 응답은 브라우저에서 캐싱될 수 있습니다. 흐름: 처음 데이터 요청 시, HTTP…","fields":{"slug":"/pattern/데이터_캐싱/"},"frontmatter":{"title":"데이터 캐싱","date":"January 16, 2025","description":"데이터는 어디서나 캐싱된다 - 프론트엔드부터 백엔드까지!","category":["pattern"]}}},{"node":{"excerpt":"클린 코드 팁: 깨끗한 테스트 없이는 깨끗한 코드를 가질 수 없다 테스트는 코드 품질의 핵심입니다. 깨끗한 테스트는 다음과 같은 특징을 가져야 합니다  깨끗한 테스트의 특징 단순함 (Simple…","fields":{"slug":"/pattern/clean_test_suite/"},"frontmatter":{"title":"clean test suite","date":"January 13, 2025","description":"test","category":["pattern"]}}}]}},"pageContext":{"category":"pattern"}},"staticQueryHashes":["1408108323","1569336894","3764592887","62622001"],"slicesMap":{}}