{"version":3,"file":"component---src-templates-blog-post-js-59b49c4736135611958d.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./src/components/button/scroll/scrollButtonStyle.js","webpack://gatsby-starter-blog/./src/components/button/scroll/scrollToBottomButton.js","webpack://gatsby-starter-blog/./src/components/button/scroll/scrollToTopButton.js","webpack://gatsby-starter-blog/./src/components/button/buttonStyle.js","webpack://gatsby-starter-blog/./src/components/button/redirectButton.js","webpack://gatsby-starter-blog/./src/components/button/homeButton.js","webpack://gatsby-starter-blog/./src/components/button/scroll/allScrollButtonContainer.js","webpack://gatsby-starter-blog/./src/components/pagination/postPagination.js","webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["const scrollButtonStyle = {\n  height: '40px',\n  padding: '10px 20px',\n  fontSize: '16px',\n  backgroundColor: '#cccccc',\n  color: '#fff',\n  border: 'none',\n  borderRadius: '5px',\n  cursor: 'pointer',\n  textAlign: 'center',\n  textDecoration: 'none',\n};\n\nexport default scrollButtonStyle;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport defaultScrollButtonStyle from './scrollButtonStyle';\n\nconst ScrollToBottomButton = ({ style }) => {\n  const [showButton, setShowButton] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY < document.documentElement.scrollHeight - window.innerHeight - 300) {\n        setShowButton(true);\n      } else {\n        setShowButton(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToBottom = () => {\n    window.scrollTo({ top: document.documentElement.scrollHeight, behavior: 'smooth' });\n  };\n\n  return (\n    showButton && (\n        <button onClick={scrollToBottom} style={style}>\n            ‚Üì\n        </button>\n    )\n  );\n};\n\nScrollToBottomButton.propTypes = {\n  style: PropTypes.object,\n};\n\nScrollToBottomButton.defaultProps = {\n  style: defaultScrollButtonStyle,\n};\n\nexport default ScrollToBottomButton;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport defaultScrollButtonStyle from './scrollButtonStyle';\n\n\nconst ScrollToTopButton = ({style}) => {\n  const [showButton, setShowButton] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY > 300) {\n        setShowButton(true);\n      } else {\n        setShowButton(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  };\n\n  return (\n    showButton && (\n        <button onClick={scrollToTop} style={style}>\n            ‚Üë\n        </button>\n    )\n  );\n};\n\nScrollToTopButton.propTypes = {\n  style: PropTypes.object,\n};\n\nScrollToTopButton.defaultProps = {\n  style: defaultScrollButtonStyle,\n};\n\nexport default ScrollToTopButton;\n","const buttonStyle = {\n  padding: '10px 20px',\n  fontSize: '16px',\n  backgroundColor: '#007bff',\n  color: '#fff',\n  border: 'none',\n  borderRadius: '5px',\n  textDecoration: 'none',\n  textAlign: 'center',\n  cursor: 'pointer',\n};\n\nexport default buttonStyle;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport defaultButtonStyle from './buttonStyle';\n\nconst RedirectButton = ({ style, url, contents}) => {\n  return (\n    <Link to={url} style={style} rel=\"prev\">\n      {contents}\n    </Link>\n  );\n};\n\nRedirectButton.propTypes = {\n  style: PropTypes.object,\n  url: PropTypes.string,\n  contents: PropTypes.string,\n};\n\nRedirectButton.defaultProps = {\n  style: defaultButtonStyle,\n};\n\nexport default RedirectButton;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport buttonStyle from './buttonStyle';\nimport RedirectButton from './redirectButton';\n\n\n\nconst HomeButton = ({ style }) => {\n  return (\n    <RedirectButton style={style} url=\"/\" contents=\"üè†\" />\n  );\n};\n\nHomeButton.propTypes = {\n  style: PropTypes.object,\n};\n\nHomeButton.defaultProps = {\n  style: buttonStyle,\n};\n\nexport default HomeButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport scrollButtonStyle from './scrollButtonStyle';\nimport ScrollToTopButton from './scrollToTopButton';\nimport ScrollToBottomButton from './scrollToBottomButton';\nimport HomeButtons from '../homeButton';\nimport RedirectButton from '../redirectButton';\n\nconst AllScrollButtonContainer = ({ previousLink, nextLink }) => {\n  return (\n    <div style={scrollButtonsContainerStyle}>\n      {previousLink && <RedirectButton style={scrollButtonStyle} url={previousLink} contents={\"‚Üê\"}/>}\n      <ScrollToTopButton style={scrollButtonStyle} />\n      <HomeButtons style={scrollButtonStyle} />\n      <ScrollToBottomButton style={scrollButtonStyle} />\n      {nextLink && <RedirectButton style={scrollButtonStyle} url={nextLink} contents={\"‚Üí\"}/>}\n    </div>\n  );\n};\n\nconst scrollButtonsContainerStyle = {\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  position: 'fixed',\n  bottom: '20px',\n  right: '20px',\n};\n\nAllScrollButtonContainer.propTypes = {\n  previousLink: PropTypes.string,\n  nextLink: PropTypes.string,\n};\n\nexport default AllScrollButtonContainer;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport './postPagination.css' // postPagination.css ÌååÏùº ÏûÑÌè¨Ìä∏\n\nconst PostPagination = ({ previous, next }) => {\n  const previousCategories = previous?.frontmatter.category ? previous.frontmatter.category.join(' > ') + ` > ` : ``\n  const previousTotalTitle = previous?.frontmatter.title ? previousCategories + previous.frontmatter.title : ``\n\n  const nextCategories = next?.frontmatter.category ? next.frontmatter.category.join(' > ') + ` > ` : ``\n  const nextTotalTitle = next?.frontmatter.title ? nextCategories + next.frontmatter.title : ``\n\n  return (\n    <nav className=\"blog-post-nav\">\n      <ul>\n        <li>\n          {previous && (\n            <Link to={previous.fields.slug} rel=\"prev\">\n              ‚Üê {previousTotalTitle}\n            </Link>\n          )}\n        </li>\n        <li>\n          <Link to=\"/\">Î™©Î°ùÏúºÎ°ú</Link>\n        </li>\n        <li>\n          {next && (\n            <Link to={next.fields.slug} rel=\"next\">\n              {nextTotalTitle} ‚Üí\n            </Link>\n          )}\n        </li>\n      </ul>\n    </nav>\n  )\n}\n\nPostPagination.propTypes = {\n  previous: PropTypes.shape({\n    fields: PropTypes.shape({\n      slug: PropTypes.string,\n    }),\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string,\n      category: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n  next: PropTypes.shape({\n    fields: PropTypes.shape({\n      slug: PropTypes.string,\n    }),\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string,\n      category: PropTypes.arrayOf(PropTypes.string),\n    }),\n  }),\n}\n\nexport default PostPagination","import * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { graphql, Link } from \"gatsby\"\n\nimport Layout from \"../components/layout/layout\"\nimport Seo from \"../components/seo\"\nimport ScrollButtonContainer from \"../components/button/scroll/allScrollButtonContainer\"\nimport Pagination from \"../components/pagination/postPagination\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata?.title || `Title`\n  const postCategories = post.frontmatter?.category || []\n  const postTitle = post.frontmatter.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <p>\n            {postCategories.map((category, index) => (\n              <React.Fragment key={category}>\n                <Link to={`/categories/${category}/`}>{category}</Link>\n                {index < postCategories.length - 1 && \", \"}\n              </React.Fragment>\n            ))}\n          </p>\n          <h1 itemProp=\"headline\">{postTitle}</h1>\n          <p>{post.frontmatter.date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        <hr />\n      </article>\n      <Pagination previous={previous} next={next} />\n      <ScrollButtonContainer previousLink={previous?.fields.slug} nextLink={next?.fields.slug}/>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nBlogPostTemplate.propTypes = {\n  data: PropTypes.shape({\n    previous: PropTypes.shape({\n      fields: PropTypes.shape({\n        slug: PropTypes.string,\n      }),\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        category: PropTypes.arrayOf(PropTypes.string),\n      }),\n    }),\n    next: PropTypes.shape({\n      fields: PropTypes.shape({\n        slug: PropTypes.string,\n      }),\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        category: PropTypes.arrayOf(PropTypes.string),\n      }),\n    }),\n    site: PropTypes.shape({\n      siteMetadata: PropTypes.shape({\n        title: PropTypes.string,\n      }),\n    }),\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.shape({\n        title: PropTypes.string,\n        date: PropTypes.string,\n        category: PropTypes.arrayOf(PropTypes.string),\n        description: PropTypes.string,\n      }),\n      html: PropTypes.string,\n    }),\n  }).isRequired,\n  location: PropTypes.object.isRequired,\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        category\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        category\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        category\n      }\n    }\n  }\n`"],"names":["height","padding","fontSize","backgroundColor","color","border","borderRadius","cursor","textAlign","textDecoration","ScrollToBottomButton","style","showButton","setShowButton","useState","useEffect","handleScroll","window","scrollY","document","documentElement","scrollHeight","innerHeight","addEventListener","removeEventListener","onClick","scrollTo","top","behavior","defaultProps","defaultScrollButtonStyle","ScrollToTopButton","RedirectButton","url","contents","Link","to","rel","defaultButtonStyle","HomeButton","buttonStyle","scrollButtonsContainerStyle","display","flexDirection","alignItems","position","bottom","right","previousLink","nextLink","scrollButtonStyle","previous","next","previousCategories","frontmatter","category","join","previousTotalTitle","title","nextCategories","nextTotalTitle","className","fields","slug","Head","data","markdownRemark","post","description","excerpt","site","location","siteTitle","siteMetadata","postCategories","postTitle","itemScope","itemType","map","index","key","length","itemProp","date","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}